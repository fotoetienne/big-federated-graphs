type Type5615 {
  field567: Float!
  field200: String
  field11540: Type5619!
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum1235!
  field58: String
}

type Type5616 {
  field177: [Type5617!]
  field379: Type119!
}

type Type5617 {
  field382: String
  field178: Type5615!
}

type Type5618 {
  field11541: String!
  field11: String!
}

type Type5619 {
  field177: [Type5620!]
  field379: Type119!
}

type Type5620 {
  field382: String
  field178: Type5618!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field11542(arg49: ID!): Type5615
  field11543(arg20: Input48!): Type5616!
}

enum Enum1235 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}