type Type5609 {
  field554: Float!
  field198: String
  field11513: Type5613!
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field100: Enum1232!
  field58: String
}

type Type5610 {
  field176: [Type5611!]
  field366: Type119!
}

type Type5611 {
  field369: String
  field177: Type5609!
}

type Type5612 {
  field11514: String!
  field11: String!
}

type Type5613 {
  field176: [Type5614!]
  field366: Type119!
}

type Type5614 {
  field369: String
  field177: Type5612!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field11515(arg49: ID!): Type5609
  field11516(arg20: Input48!): Type5610!
}

enum Enum1232 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}