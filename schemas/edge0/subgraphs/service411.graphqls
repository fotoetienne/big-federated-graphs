type Type3152 @key(fields: "field569") {
  field1745: Type539
  field567: Float!
  field200: String
  field1746: String
  field1747: Type539
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum2481!
  field58: String
}

type Type10049 {
  field177: [Type10050!]
  field379: Type119!
}

type Type10050 {
  field382: String
  field178: Type3152!
}

type Mutation @extends {
  field22608(arg20: Input4518!): Type10051!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field22609(arg49: ID!): Type3152
  field22610(arg20: Input48!): Type10049!
}

type Type539 {
  field1751: String
  field1752: String
  field1753: Type26
  field1754: String
  field1755: String
  field1756: Type26
  field1757: String
  field1758: Float
}

type Type10051 {
  field588: Type3152
}

type Type26 @extends @key(fields: "field132") {
  field132: ID! @external
}

enum Enum2481 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

enum Enum31 {
  VALUE_214
  VALUE_215
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input49 {
  inputField16: String!
  "This is an anonymized description"
  inputField115: Enum31!
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input4518 {
  inputField120: String
  inputField110: String
  "This is an anonymized description"
  inputField111: String
  inputField121: String
  "This is an anonymized description"
  inputField122: Input49
  "This is an anonymized description"
  inputField123: Input50
  "This is an anonymized description"
  inputField124: String
  "This is an anonymized description"
  inputField125: String
  "This is an anonymized description"
  inputField126: String
}