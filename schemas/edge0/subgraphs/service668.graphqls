type Type16477 {
  field32336: String
  field32337: String
  field310: String
}

type Type16478 {
  field3464: String
  field3465: String
}

type Type3094 @key(fields: "field569") {
  field567: Float!
  field200: String
  field32338: Type16478
  field736: Type16477
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum3954!
  field58: String
}

type Type16479 {
  field177: [Type16480!]
  field379: Type119!
}

type Type16480 {
  field382: String
  field178: Type3094!
}

type Mutation @extends {
  field32339(arg20: Input7682!): Type16481!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field32340(arg49: ID!): Type3094
  field32341(arg20: Input48!): Type16479!
}

type Type16481 {
  field588: Type3094
}

enum Enum3954 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

enum Enum31 {
  VALUE_214
  VALUE_215
}

input Input7681 {
  inputField11106: String!
  inputField11107: String!
  inputField551: String!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input49 {
  inputField16: String!
  "This is an anonymized description"
  inputField115: Enum31!
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input7682 {
  inputField120: String
  inputField110: String
  "This is an anonymized description"
  inputField111: String
  inputField121: String
  inputField135: Input7681!
  "This is an anonymized description"
  inputField122: Input49
  "This is an anonymized description"
  inputField123: Input50
  "This is an anonymized description"
  inputField124: String
  "This is an anonymized description"
  inputField125: String
  "This is an anonymized description"
  inputField126: String
}