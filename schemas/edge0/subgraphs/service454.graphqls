input Input5034 {
  inputField1932: Int
  inputField1349: Int
}

input Input5035 {
  "This is an anonymized description"
  inputField8606: String!
  "This is an anonymized description"
  inputField981: String!
}

input Input5036 {
  "This is an anonymized description"
  inputField8044: [String]
  "This is an anonymized description"
  inputField356: [String]
}

input Input5037 {
  "This is an anonymized description"
  inputField356: [String]
  inputField2245: [ID!]
  inputField8607: Boolean
  inputField8608: Boolean
  inputField8609: Boolean
  inputField8610: Boolean
  inputField8611: Boolean
  inputField8612: Boolean
}

type Query @extends {
  field23920(arg306: Input5034, arg545: Input5035!, arg7: Input5036): Type10983
  field23921(arg306: Input5034, arg545: Input5035!, arg7: Input5037): Type10985
  field23922(arg23: ID!, arg545: Input5035!): Type3051
  field23923(arg545: Input5035!, arg943: String): [Type10986]
}

scalar Scalar3

interface Interface455 {
  field2783: ID!
  field1876: String
  field23924: String
  field1715: String
  field100: String
  field23925: Boolean
  field7764: Scalar14
}

type Type10983 {
  field1571: Int!
  field13392: [Type3050!]
}

type Type3050 implements Interface455 @key(fields: "field2783") {
  "This is an anonymized description"
  field2783: ID!
  "This is an anonymized description"
  field1876: String
  "This is an anonymized description"
  field23924: String
  "This is an anonymized description"
  field1715: String
  "This is an anonymized description"
  field100: String
  "This is an anonymized description"
  field23925: Boolean
  "This is an anonymized description"
  field7764: Scalar14
  field23926: String
  field12624: String
  field23927: String
  field23928: String
  field23929: String
  field23930: String
  field23931: Type10984
  field656: [String!]
  field2741: Type3051!
  "This is an anonymized description"
  field23932: String
  "This is an anonymized description"
  field23933: String
  field23934: String
  field23935: String
}

type Type10984 {
  field23936: [String!]
  field23937: Boolean
  field23938: String
  field23939: Scalar3
  field23940: [String!]
}

type Type10985 {
  field1571: Int!
  field4412: [Type3051!]
}

type Type26 @key(fields: "field132") @extends {
  field132: ID! @external
  field23921(arg306: Input5034, arg545: Input5035!, arg7: Input5037): Type10985
}

type Type3051 implements Interface455 @key(fields: "field2783") {
  field2783: ID!
  field1876: String
  field23924: String
  field1715: String
  field100: String
  field23925: Boolean
  field7764: Scalar14
  field23941: Scalar14
  field23942: Boolean
  field23943: Boolean
  field23944: Boolean
  field23945: String
  field23946: Boolean
  field1771: [Type26!]
  field23947: String
  field2750: String
  field3510: String
  field2893: String
  field677: String
  field23948: Boolean
  field13392: [Type3050!]
}

type Type10986 {
  field1876: String!
  field19428: String!
}