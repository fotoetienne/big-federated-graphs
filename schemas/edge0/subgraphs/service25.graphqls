type Type32 @key(fields: "field107") @extends {
  field107: Int! @external
}

type Type33 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type34 @key(fields: "field108 { field2 field44 }") @extends {
  field108: Type35 @external
}

type Type35 @key(fields: "field2 field44") @extends {
  field2: String! @external
  field44: String @external
}

scalar Scalar3

input Input21 {
  inputField37: Input22!
}

input Input22 {
  inputField38: Enum11
  inputField39: [Input23!]
  inputField40: [Input25!]
  inputField41: [Input24!]
  inputField42: [Input22!]
}

input Input23 {
  inputField43: Enum13!
  inputField44: String!
  inputField45: Enum14
  inputField46: Input26
  inputField47: Scalar7
  inputField48: String
  inputField49: Input39
}

input Input24 {
  inputField43: Enum13!
  inputField50: String!
  inputField46: Input26
  inputField48: String
}

input Input25 {
  inputField43: Enum13!
  inputField51: [Float!]!
  inputField46: Input26
  inputField48: String
}

input Input26 {
  inputField38: Enum11
  inputField52: [Input27!]
}

input Input27 {
  inputField53: String!
  inputField54: Enum12!
  inputField55: Scalar3!
  inputField49: Input39
}

input Input28 {
  inputField56: [Input29!]
}

input Input29 {
  inputField57: String!
  inputField58: Enum10 = VALUE_3
}

enum Enum10 {
  VALUE_2
  VALUE_3
}

input Input30 {
  inputField59: Int!
  inputField56: [String!]
}

enum Enum11 {
  VALUE_22
  VALUE_23
}

enum Enum12 {
  VALUE_24
  VALUE_25
  VALUE_26
  VALUE_27
  VALUE_28
  VALUE_29
  VALUE_30
  VALUE_31
}

enum Enum13 {
  VALUE_32
  VALUE_33
  VALUE_34
  VALUE_35
  VALUE_36
  VALUE_37
  VALUE_38
  VALUE_39
  VALUE_40
  VALUE_41
  VALUE_42
  VALUE_43
  VALUE_44
  VALUE_45
  VALUE_46
  VALUE_47
  VALUE_48
  VALUE_49
  VALUE_50
  VALUE_51
  VALUE_52
  VALUE_53
  VALUE_54
  VALUE_55
  VALUE_56
  VALUE_57
  VALUE_58
  VALUE_59
  VALUE_60
  VALUE_61
  VALUE_62
  VALUE_63
  VALUE_64
  VALUE_65
  VALUE_66
  VALUE_67
  VALUE_68
  VALUE_69
  VALUE_70
  VALUE_71
  VALUE_72
  VALUE_73
  VALUE_74
  VALUE_75
  VALUE_76
  VALUE_77
  VALUE_78
  VALUE_79
  VALUE_80
  VALUE_81
  VALUE_82
  VALUE_83
  VALUE_84
  VALUE_85
  VALUE_86
  VALUE_87
  VALUE_88
  VALUE_89
  VALUE_90
  VALUE_91
  VALUE_92
  VALUE_93
  VALUE_94
  VALUE_95
  VALUE_96
  VALUE_97
  VALUE_98
  VALUE_99
  VALUE_100
  VALUE_101
  VALUE_102
  VALUE_103
  VALUE_104
  VALUE_105
  VALUE_106
  VALUE_107
  VALUE_108
  VALUE_109
}

input Input31 {
  inputField56: [Input32!]
}

input Input32 {
  inputField57: String!
  inputField55: Scalar3!
}

enum Enum14 {
  VALUE_110
  VALUE_111
  VALUE_112
  VALUE_113
  VALUE_114
  VALUE_115
  VALUE_116
  VALUE_117
  VALUE_118
  VALUE_119
  VALUE_120
  VALUE_121
  VALUE_122
  VALUE_123
  VALUE_124
  VALUE_125
  VALUE_126
  VALUE_127
  VALUE_128
  VALUE_129
  VALUE_130
  VALUE_131
  VALUE_132
  VALUE_133
  VALUE_134
  VALUE_135
  VALUE_136
  VALUE_137
  VALUE_138
  VALUE_139
  VALUE_140
}

input Input33 {
  inputField60: String!
  inputField61: String!
  inputField8: Int!
}

type Type36 {
  field109: String!
  field110: String!
  field44: Int!
}

enum Enum15 {
  VALUE_141
  VALUE_142
  VALUE_143
  VALUE_144
}

input Input34 {
  inputField62: Scalar3
  inputField63: Scalar3
  inputField64: Scalar3
}

type Type37 {
  field111: Type36!
  field112: [Type38!]
}

type Type38 {
  field113: Enum16!
  field114: String!
  field115: String
}

enum Enum16 {
  VALUE_141
  VALUE_145
  VALUE_146
  VALUE_147
}

input Input35 {
  inputField65: [Input33!]
  inputField46: Input26
}

input Input36 {
  inputField63: Scalar3!
}

input Input37 {
  inputField43: Enum13
  inputField66: [Input32!]!
  inputField67: String!
  inputField68: Input31
  inputField69: Boolean
}

input Input38 {
  inputField70: String!
  inputField71: String
}

input Input39 {
  inputField72: Boolean
  inputField73: Boolean
  inputField74: Boolean
  inputField75: Boolean
}

scalar Scalar1

scalar Scalar4

type Type39 {
  field37: Type122!
  field36: [Type40!]
  field38: Scalar1
  field116: [Type47!]
  field117: Enum17
}

type Type40 {
  field41: String
  field40: Union1!
}

union Union1 = Type42 | Type45 | Type46

type Type41 {
  field111: Type36
  field98: String!
  field96: Scalar14!
  field118: Enum15!
  field119: Scalar3
}

type Type42 {
  field120: Type32
  field121: Type33
  field122: [Union4!]
  field123: Float
  field124: [Type43!]
  field116: [Type47!]
  field125: [Type41!]
  field126: Type34
}

type Type43 {
  field127: Enum13!
  field128: [Type44!]
}

type Type44 {
  field5: String!
  field129: [Union3!]
  field123: Float
}

union Union2 = Type45 | Type42 | Type46

type Type45 {
  field114: Type47!
  field130: [Union2!]
  field131: Boolean
  field38: Scalar1
}

type Type46 {
  field132: Type47
  field133: [Union2!]
  field123: Float
}

type Type47 {
  field5: String!
  field134: Union3!
}

union Union3 = Type49 | Type50 | Type51 | Type52 | Type48 | Type57 | Type58

type Type48 {
  field135: [Union3!]!
}

type Type49 {
  field134: Int @deprecated
  field136: Int
}

type Type50 {
  field134: Float @deprecated
  field137: Float
}

type Type51 {
  field134: String @deprecated
  field138: String
}

type Type52 {
  field134: Boolean @deprecated
  field139: Boolean
}

union Union4 = Type53 | Type54

type Type53 {
  field140: Scalar1
  field141: Scalar1
}

type Type54 {
  field142: Scalar1
  field143: Scalar1
  field144: Scalar1
  field145: Scalar1
}

type Type55 {
  field146: [Type56!]
}

type Type56 {
  field127: Enum13!
  field147: [Enum14!]
}

type Type57 {
  field148: Float
  field149: Float
  field150: Float
}

type Type58 {
  field151: Type57
  field152: Type57
}

type Type59 {
  field58: Enum17!
  field119: Scalar4
}

enum Enum17 {
  VALUE_148
  VALUE_149
  VALUE_150
  VALUE_141
}

type Type60 {
  field58: Enum18
  field153: String
  field154: String
  field155: Type61
}

enum Enum18 {
  VALUE_149
  VALUE_151
  VALUE_152
  VALUE_141
}

type Type61 {
  field127: Enum13
  field156: [Type47!]!
  field98: String!
  field116: [Type47!]
}

type Query @extends {
  """
  This is an anonymized description
  """
  field157(
  arg16: Input21
  arg17: Input26
  arg18: Input28
  arg19: Input30
  arg7: Int
  arg6: String
  arg20: Input31
  arg21: Input35
  arg22: Input38
  arg23: Boolean): Type39!
  """
  This is an anonymized description
  """
  field158(
  arg24: Enum13): Type55
  """
  This is an anonymized description
  """
  field159(
  arg25: Input33): Type37
  """
  This is an anonymized description
  """
  field160(
  arg16: Input21
  arg17: Input26
  arg18: Input28
  arg19: Input30
  arg7: Int
  arg6: String
  arg20: Input31
  arg21: Input35
  arg22: Input38
  arg23: Boolean): Type59
}

type Mutation @extends {
  """
  This is an anonymized description
  """
  field161(
  arg25: Input33!
  arg26: String!
  arg27: Enum15!
  arg28: Input34!
  arg29: Input31): Boolean!
  """
  This is an anonymized description
  """
  field162(
  arg30: [Input37!]!): [Type60]
}
