type Mutation @extends {
  field20484(arg20: Input4235!): Type9332!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field20485(arg49: ID!): Type9333
  field20486(arg20: Input48!): Type9334!
}

type Type9332 {
  field588: Type9333
}

type Type9333 {
  field567: Float!
  field200: String
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum2236!
  field58: String
}

type Type9334 {
  field177: [Type9335!]
  field379: Type119!
}

type Type9335 {
  field382: String
  field178: Type9333!
}

enum Enum2235 {
  VALUE_31
  VALUE_33
}

enum Enum2236 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

enum Enum2237 {
  VALUE_7146
  VALUE_7147
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input4235 {
  inputField120: String
  inputField110: String
  inputField111: String
  inputField121: String
  inputField135: Input4236!
  inputField123: Input50
  inputField125: String
  inputField126: String
}

input Input4236 {
  inputField1908: Enum2235!
  inputField7589: String!
  inputField7590: String!
  inputField7591: String!
  inputField7592: Enum2237!
  inputField7593: Int!
}