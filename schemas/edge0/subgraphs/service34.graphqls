directive @directive1(arg31: String!) on OBJECT | INPUT_OBJECT | FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @directive2 on FIELD_DEFINITION

type Mutation @directive1(arg31: "anonymous-string") {
  field458(arg1: Input79!): ID
  field459(arg45: ID!, arg1: Input78!): ID
  field460(arg45: ID!, arg1: Input70!): Type202
  field461(arg45: ID!, arg1: Input69!): Type202
  field462(arg45: ID!, arg1: [Input70!]!): Type202
  field463(arg45: ID!, arg1: Input68!): Type202
  field464(arg45: ID!, arg1: Input74!): Type202
  field465(arg45: ID!, arg1: Input75!): Type202
  field466(arg45: ID!, arg1: Input76!): Type202
  field467(arg45: ID!, arg1: Input77): Type202
  field468(arg46: [ID!]!): [Type202!]!
  field469(arg46: [ID!]!): [ID!]!
  field470(arg45: ID!, arg1: Input67): Type202
  field471(arg12: Int!, arg47: Enum42!, arg48: Boolean!): Type196 @directive1(arg31: "anonymous-string")
}

type Query @directive1(arg31: "anonymous-string") {
  field472(arg49: ID!, arg50: String!): Type201
  field473(arg45: ID!, arg51: Boolean! = false): Type202
  field474(arg46: [ID!]!): Type197!
  field475(arg12: Int!, arg52: Enum42!): [Type83!]!
  field476(arg12: Int!, arg52: Enum42!, arg16: String): [Type29!]! @provides(fields: "field559")
  field477(arg12: ID!): [Type209!]!
  field478(arg6: String = null, arg8: String = null, arg7: Int = null, arg9: Int = null, arg53: ID = null, arg12: Int = null, arg47: Enum42!): Type198!
  field479: Type226!
}

type Type196 {
  field480: Boolean!
  field481: Scalar4!
}

type Type197 {
  field482: [Type202!]!
}

type Type198 {
  field482: Type199!
}

type Type199 {
  field36: [Type200!]
  field37: Type122
  field483: Int
}

type Type200 {
  field41: String
  field40: Type202
}

input Input67 {
  inputField156: [ID!]!
}

input Input68 {
  inputField157: Enum56!
}

input Input69 {
  inputField7: ID!
}

input Input70 {
  inputField158: Input73
  inputField159: String
  inputField7: ID!
  inputField160: String
  inputField161: Boolean
  inputField162: String
  inputField163: String
  inputField164: Enum58
  inputField165: Input71
  inputField166: Input72
  inputField167: Enum48
}

input Input71 {
  inputField57: String!
  inputField168: String!
}

input Input72 {
  inputField7: ID!
}

input Input73 {
  inputField7: ID!
  inputField8: String!
}

input Input74 {
  "This is an anonymized description"
  inputField156: [ID!]!
}

input Input75 {
  "This is an anonymized description"
  inputField156: [ID!]!
}

input Input76 {
  inputField123: String
}

input Input77 {
  "This is an anonymized description"
  inputField169: String
}

input Input78 {
  "This is an anonymized description"
  inputField170: String!
}

input Input79 {
  inputField171: Int!
  inputField172: String!
  "This is an anonymized description"
  inputField173: [String!]! = []
  "This is an anonymized description"
  inputField174: [String!]! = []
  "This is an anonymized description"
  inputField175: Input80 @deprecated(reason: "Anonymized deprecation reason")
  "This is an anonymized description"
  inputField176: Input81 @experimental
  "This is an anonymized description"
  inputField177: String!
  "This is an anonymized description"
  inputField108: Enum42!
}

enum Enum42 {
  VALUE_231
  VALUE_232
}

input Input80 {
  inputField178: Enum46
  inputField179: Enum47!
  inputField180: String!
  inputField181: Enum48
  inputField182: Int!
  inputField183: Enum45!
  inputField184: Input83
  inputField185: Enum49!
  inputField186: Enum43! = VALUE_233
}

input Input81 {
  inputField180: String!
  inputField186: Enum43! = VALUE_233
  "This is an anonymized description"
  inputField187: [Input82!]!
}

input Input82 {
  inputField178: Enum46
  inputField179: Enum47!
  inputField181: Enum48
  inputField182: Int!
  inputField184: Input83
  inputField188: Int
  inputField185: Enum49!
  inputField183: Enum45!
  inputField189: Input84 @experimental
}

enum Enum43 {
  VALUE_233
  VALUE_234
}

input Input83 {
  inputField190: Enum44!
  inputField191: Int!
}

enum Enum44 {
  VALUE_235
  VALUE_236
}

enum Enum45 {
  VALUE_237
  VALUE_238
  VALUE_239
  VALUE_240
  VALUE_241
  VALUE_242
  VALUE_243
  VALUE_244
  VALUE_245
  VALUE_246
  VALUE_247
  VALUE_248
  VALUE_249
  VALUE_250
}

enum Enum46 {
  VALUE_251
  VALUE_252
  VALUE_253
  VALUE_254
}

enum Enum47 {
  VALUE_255
  VALUE_256
}

enum Enum48 {
  VALUE_257
  VALUE_258
  VALUE_259
  VALUE_260
}

enum Enum49 {
  VALUE_237
  VALUE_239
  VALUE_240
  VALUE_261
  VALUE_242
  VALUE_243
  VALUE_244
  VALUE_245
  VALUE_246
  VALUE_247
  VALUE_248
  VALUE_249
  VALUE_250
}

type Type201 {
  field484: Enum50!
  field485: Int
}

enum Enum50 {
  VALUE_262
  VALUE_263
  VALUE_264
  VALUE_265
}

type Type202 @key(fields: "field2") {
  field2: ID!
  field120: Type32!
  field486: String!
  field487: [Type208!]
  field488: Type210!
  field94: Scalar14!
  field489: Scalar14
  field490: Type212!
  field5: String!
  field285: Enum42!
  field491: Int!
  field492: Type29! @provides(fields: "field559")
  field493: Type207!
  field494: [Type215!]!
  field495: [Type83!]
  field496: [Type29!]!
  field58: Enum51
  field497: Scalar14
  field498: String
  field499: Type203! @deprecated(reason: "Anonymized deprecation reason")
  field500: Type204!
}

type Type203 {
  field501: Enum46
  field502: Enum47!
  field503: String!
  field504: Enum48
  field505: Int!
  field506: Enum45!
  field142: Type206
  field507: Enum49!
  field508: Enum43!
}

type Type204 {
  field503: String!
  field508: Enum43!
  field509: [Type205!]!
}

type Type205 {
  field502: Enum47!
  field501: Enum46
  field506: Enum45!
  field505: Int!
  field142: Type206
  field510: Int
  field507: Enum49!
  field504: Enum48
  field511: Type228 @experimental
}

type Type206 {
  field512: Enum44!
  field513: Int!
}

enum Enum51 {
  VALUE_266
  VALUE_151
  VALUE_152
  VALUE_149
  VALUE_267
  VALUE_268
  VALUE_269
  VALUE_270
  VALUE_271
  VALUE_272
}

type Type207 {
  field514: Int!
  field515: Int!
  field516: Int!
  field517: String!
  field518: Int!
}

type Type208 {
  field5: String!
}

type Type209 @directive1(arg31: "anonymous-string") {
  field5: String!
  field107: String!
}

type Type210 {
  field519: String!
  field520: String
  field521: String!
  field522: Scalar1
}

type Type211 {
  field523: Boolean
  field524: Scalar4
  field5: Enum56!
  field525: Enum55!
}

type Type212 {
  field526: [Type211!]
  field494: [Type214!]
}

type Type213 {
  field524: Scalar4
  field5: Enum54!
  field525: Enum55!
}

type Type214 {
  field490: [Type213!]
  field527: ID!
}

type Type215 {
  field2: ID!
  field528: Type218
  field529: Type217
  field530: String
  field531: String
  field532: String
  field533: String
  field534: Type216!
  field58: Enum53
  field535: Type219!
  field536: Enum59
  field537: Type220
}

type Type216 {
  field538: String!
  field330: String!
  field329: String!
  field539: Int
}

type Type217 {
  field540: String
  field541: String
  field542: String
  field543: String
  field5: String!
  field544: String
}

type Type218 {
  field113: Enum57!
  field545: Scalar4! @deprecated(reason: "Anonymized deprecation reason")
  field546: Scalar4!
}

type Type219 {
  field547: Type224
  field548: Type224
  field549: Boolean
  field113: Enum52
}

type Type220 {
  field550: Type221
  field551: Type221
}

type Type221 {
  field552: Type222
  field553: [Type222]
  field554: Int @deprecated(reason: "Anonymized deprecation reason")
  field555: Float
}

type Type222 {
  field379: String
  field75: String
}

enum Enum52 {
  VALUE_273
  VALUE_274
  VALUE_275
}

type Type223 {
  field5: String!
  field556: String!
}

type Type224 {
  field5: String!
  field557: Type225!
}

type Type225 {
  field556: String
  field558: String
}

enum Enum53 {
  VALUE_266
  VALUE_199
  VALUE_151
  VALUE_158
  VALUE_152
  VALUE_149
  VALUE_270
  VALUE_271
}

enum Enum54 {
  VALUE_276
  VALUE_277
  VALUE_278
  VALUE_279
  VALUE_280
  VALUE_281
  VALUE_282
  VALUE_283
  VALUE_284
  VALUE_285
  VALUE_286
  VALUE_287
}

enum Enum55 {
  VALUE_288
  VALUE_289
}

enum Enum56 {
  VALUE_276
  VALUE_290
  VALUE_283
}

enum Enum57 {
  VALUE_291
  VALUE_292
  VALUE_293
}

enum Enum58 {
  VALUE_294
  VALUE_295
}

enum Enum59 {
  VALUE_296
  VALUE_297
  VALUE_298
  VALUE_299
  VALUE_300
}

type Type29 @extends @key(fields: "field98") {
  field98: ID! @external
  field559: String @external
}

type Type83 @extends @key(fields: "field2") {
  field2: ID! @external
}

type Type32 @extends @key(fields: "field107") {
  field107: Int! @external
}

type Type226 {
  field560: [Type227!]!
}

type Type227 {
  field5: String!
  field556: String!
}

scalar Scalar4

scalar Scalar1

input Input84 {
  inputField192: Input85!
  inputField193: Input85
  inputField194: Boolean!
  inputField195: Float!
  inputField196: Enum60!
  inputField197: Enum61!
}

input Input85 {
  inputField198: Int!
  inputField199: Int!
}

enum Enum60 {
  VALUE_301
  VALUE_302
  VALUE_303
}

enum Enum61 {
  VALUE_304
  VALUE_305
  VALUE_306
  VALUE_307
}

type Type228 {
  field561: Type229!
  field562: Type229
  field563: Boolean!
  field564: Float!
  field565: Enum60!
  field566: Enum61!
}

type Type229 {
  field379: Int!
  field75: Int!
}
