type Type2017 @key(fields: "field2") @extends {
  field2: ID! @external
  field15381: Type7126
  field15382: Type7128
}

type Type2009 @key(fields: "field2") @extends {
  field2: ID! @external
  field15383: [Type2010!]!
}

type Type29 @key(fields: "field109") @extends {
  field109: Int! @external
}

type Type22 @key(fields: "field2") @extends {
  field2: Enum553! @external
}

type Type26 @key(fields: "field132") @extends {
  field132: ID! @external
}

type Type910 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type1970 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type1998 @key(fields: "field2") {
  field2: ID!
  field11: Enum1715
  field155: String
  field156: [Enum1716!]!
  field157: [String!]!
  field158: [Enum553!]!
  field15384: String
  field15385: [Enum1710!]!
  field270: Scalar14
  field271: Scalar14
}

enum Enum1710 {
  VALUE_17
  VALUE_5784
}

type Type2018 @key(fields: "field2") {
  field2: ID!
  field3668: Enum1715
  field150: Enum1716
  field15386: Enum1712
  field15387: [Enum1711!]!
  field15388: Enum1713!
  field2706: [Enum553!]!
  field15389: [Enum1714!]!
}

enum Enum1711 {
  VALUE_5785
  VALUE_5786
  VALUE_5787
  VALUE_5788
  VALUE_5789
  VALUE_5790
}

enum Enum1712 {
  VALUE_5791
  VALUE_5792
  VALUE_5793
}

enum Enum1713 {
  VALUE_1157
  VALUE_5052
  VALUE_5794
}

enum Enum1714 {
  VALUE_1250
  VALUE_1251
}

enum Enum1715 {
  VALUE_5795
  VALUE_5796
  VALUE_5797
  VALUE_5798
  VALUE_5799
  VALUE_5800
  VALUE_5801
  VALUE_5802
  VALUE_5803
  VALUE_5804
  VALUE_5805
  VALUE_5806
  VALUE_4301
  VALUE_5807
  VALUE_5808
  VALUE_5809
  VALUE_5810
  VALUE_5811
  VALUE_5812
  VALUE_5813
  VALUE_5814
  VALUE_5815
  VALUE_5816
  VALUE_5817
  VALUE_5818
  VALUE_5819
  VALUE_5820
  VALUE_5821
  VALUE_5822
  VALUE_5823
  VALUE_5824
}

enum Enum1716 {
  VALUE_5825
  VALUE_5826
  VALUE_5827
  VALUE_5828
  VALUE_4510
  VALUE_5829
  VALUE_5830
  VALUE_5831
  VALUE_5832
}

type Type7126 {
  """
  This is an anonymized description
  """
  field15390(
  arg7: Input3029): [Type7127!]!
  """
  This is an anonymized description
  """
  field15391: Boolean
}

input Input3029 {
  """
  This is an anonymized description
  """
  inputField2345: Boolean
}

type Type7127 {
  field2: ID!
  field287: String!
  field11: String
  field332: Union218
  field270: Scalar14
  field15392: Union218
  field8860: Scalar14
}

union Union218 = Type26 | Type910

type Mutation {
  field15393(arg20: [Input3030!]!): [Union219!]!
  field15394(arg20: [ID!]!): [Type7130!]
}

input Input3030 {
  inputField936: String!
  inputField5492: ID!
  inputField64: String
}

union Union219 = Type2017 | Type7130

type Type7128 {
  field15395: Type7129
  field15396: Boolean
  field15397: Type7132
  field15398: Boolean
  field15399: Type7135
  field15400: Boolean
  field15401: Type7133
  field15402: Boolean
  field15403: Type7136
  field15404: Boolean
  field15405: Type7134
  field15406: Boolean
}

type Type7129 {
  field2: ID!
  field332: Union218!
  field270: Scalar14!
  field15392: Union218
  field8860: Scalar14
}

extend type Mutation {
  field15407(arg20: Input3031!): Union220!
  field15408(arg20: ID!): Type7130
  field15409(arg20: Input3032!): Union221!
  field15410(arg20: ID!): Type7130
  field15411(arg20: Input3035!): Union224!
  field15412(arg20: ID!): Type7130
  field15413(arg20: Input3033!): Union222!
  field15414(arg20: ID!): Type7130
  field15415(arg20: Input3036!): Union225!
  field15416(arg20: ID!): Type7130
  field15417(arg20: Input3034!): Union223!
  field15418(arg20: ID!): Type7130
}

input Input3031 {
  inputField5492: ID!
}

union Union220 = Type2017 | Type7130

type Type7130 {
  field2985: [Type7131!]!
}

type Type7131 {
  field690: String!
  field80: Enum1717!
  field418: String!
}

enum Enum1717 {
  VALUE_1344
  VALUE_1345
  VALUE_1346
  VALUE_1347
  VALUE_1348
  VALUE_276
  VALUE_2673
}

type Type7132 {
  field2: ID!
  field332: Union218!
  field270: Scalar14!
  field15392: Union218
  field8860: Scalar14
}

input Input3032 {
  inputField5492: ID!
}

union Union221 = Type2017 | Type7130

type Type7133 {
  field2: ID!
  field332: Union218!
  field270: Scalar14!
  field15392: Union218
  field8860: Scalar14
}

input Input3033 {
  inputField5492: ID!
}

union Union222 = Type2017 | Type7130

type Type7134 {
  field2: ID!
  field332: Union218!
  field270: Scalar14!
  field15392: Union218
  field8860: Scalar14
}

input Input3034 {
  inputField5492: ID!
}

union Union223 = Type2017 | Type7130

type Type7135 {
  field2: ID!
  field332: Union218!
  field270: Scalar14!
  field15392: Union218
  field8860: Scalar14
}

input Input3035 {
  inputField5492: ID!
}

union Union224 = Type2017 | Type7130

type Type7136 {
  field2: ID!
  field332: Union218!
  field270: Scalar14!
  field15392: Union218
  field8860: Scalar14
}

input Input3036 {
  inputField5492: ID!
}

union Union225 = Type2017 | Type7130

type Query {
  field15419(arg1: [ID!]!): [Union226!]!
  field15420(arg1: [ID!]!): [Union227!]!
  field15421(arg1438: Boolean, arg26: Int, arg25: String, arg20: [Input3037]): Type7137
  field15422(arg1: [ID!]!): [Union229!]!
}

union Union226 = Type1998 | Type7130

union Union227 = Type2018 | Type7130

input Input3037 {
  inputField5493: String!
  inputField1275: String!
  inputField357: Enum553
}

type Type7137 {
  field379: Type119!
  field177: [Type7138]
}

type Type7138 {
  field382: String!
  field178: Type7139
}

type Type7139 {
  field15423: String!
  field15424: [Union228!]!
  field2985: [Type7131!]!
}

union Union228 = Type7140 | Type7141 | Type7142 | Type7143 | Type7144 | Type7145

type Type7140 {
  field15425: String!
}

type Type7141 {
  field418: String!
}

type Type7142 {
  field157: [String!]!
}

type Type7143 {
  field15426: [Enum553!]!
}

type Type7144 {
  field418: String!
}

type Type7145 {
  field418: String!
}

extend type Mutation {
  """
  This is an anonymized description
  """
  field15427(
  arg20: Input3038!): Union230!
  """
  This is an anonymized description
  """
  field15428(
  arg20: Input3039!): Union231!
  """
  This is an anonymized description
  """
  field15429(
  arg20: Input3040!): [Union233!]!
  """
  This is an anonymized description
  """
  field15430(
  arg20: Input3041!): Union232!
}

enum Enum1718 {
  VALUE_2392
  VALUE_2082
  VALUE_2083
  VALUE_3569
}

enum Enum1719 {
  VALUE_342
  VALUE_765
  VALUE_1014
}

enum Enum1720 {
  VALUE_5833
  VALUE_5834
  VALUE_5835
  VALUE_10
}

input Input3038 {
  inputField5494: ID!
  inputField5495: ID!
  inputField5496: Boolean!
  inputField5497: [Input3042!]
  inputField5498: [Enum553!]!
}

input Input3039 {
  inputField16: ID!
}

input Input3040 {
  inputField5499: ID
  inputField5495: ID
}

input Input3041 {
  inputField16: ID!
  inputField507: Enum1718!
  inputField613: ID
  inputField5497: [Input3042]
  inputField5500: Input3043
}

input Input3042 {
  inputField32: Enum1711
  inputField62: String
}

input Input3043 {
  inputField709: String!
  inputField5501: [Enum1720!]!
}

union Union229 = Type2010 | Type7130

union Union230 = Type2010 | Type7130

union Union231 = Type2010 | Type7130

union Union232 = Type2010 | Type7130

union Union233 = Type2010 | Type7130

type Type2010 @key(fields: "field2") {
  field2: ID!
  field15431: Type2018
  field25: Type2009
  field15432: [Enum553!]!
  field21: Enum1719
  field128: Type26
  field15433: [Type7146]
  field15434: Type7147
  field15435: Boolean
  field270: Scalar14!
  field332: Union218
  field271: Scalar14!
  field304: Union218
  field8860: Scalar14
  field15392: Union218
}

type Type7146 {
  field566: Enum1711!
  field36: String
}

type Type7147 {
  field1863: String!
  field15436: [Enum1720!]
}

extend type Query {
  field15437(arg1: [ID!]!): [Union234!]!
  field15438(arg1439: ID!): Union235!
}

union Union234 = Type2011 | Type7130

type Type2011 @key(fields: "field2") {
  field2: ID!
  field271: Scalar14!
  field108: Type29!
  field67: Type22!
  field15439: Type1970!
  field21: Enum1721!
  field128: Type26
  field15440: [Type7148!]
  field537: [Type7149!]
}

enum Enum1721 {
  VALUE_1522
  VALUE_1984
  VALUE_765
}

type Type7148 {
  field765: String!
  field36: String!
  field15441: String!
  field6099: String!
  field200: String!
}

type Type7149 {
  field765: String!
  field36: Float!
  field200: String!
  field15442: Enum1722
}

enum Enum1722 {
  VALUE_5836
  VALUE_5837
}

union Union235 = Type7150 | Type7130

type Type7150 {
  field152: String!
}

extend type Mutation {
  field15443(arg1440: ID!): Union236
  field15444(arg20: Input3044!): Union237!
}

union Union236 = Type7151 | Type7130

type Type7151 {
  field15445: ID!
}

input Input3044 {
  inputField16: ID!
  inputField149: Enum1721
  inputField5502: ID
}

union Union237 = Type2011 | Type7130