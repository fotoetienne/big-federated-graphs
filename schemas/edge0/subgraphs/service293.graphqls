type Type2013 @key(fields: "field2") @extends {
  field2: ID! @external
  field15357: Type7120
  field15358: Type7122
}

type Type2005 @key(fields: "field2") @extends {
  field2: ID! @external
  field15359: [Type2006!]!
}

type Type29 @key(fields: "field109") @extends {
  field109: Int! @external
}

type Type22 @key(fields: "field2") @extends {
  field2: Enum550! @external
}

type Type26 @key(fields: "field132") @extends {
  field132: ID! @external
}

type Type910 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type1966 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type1994 @key(fields: "field2") {
  field2: ID!
  field11: Enum1712
  field155: String
  field156: [Enum1713!]!
  field157: [String!]!
  field158: [Enum550!]!
  field15360: String
  field15361: [Enum1707!]!
  field265: Scalar14
  field266: Scalar14
}

enum Enum1707 {
  VALUE_17
  VALUE_5781
}

type Type2014 @key(fields: "field2") {
  field2: ID!
  field3650: Enum1712
  field150: Enum1713
  field15362: Enum1709
  field15363: [Enum1708!]!
  field15364: Enum1710!
  field2692: [Enum550!]!
  field15365: [Enum1711!]!
}

enum Enum1708 {
  VALUE_5782
  VALUE_5783
  VALUE_5784
  VALUE_5785
  VALUE_5786
  VALUE_5787
}

enum Enum1709 {
  VALUE_5788
  VALUE_5789
  VALUE_5790
}

enum Enum1710 {
  VALUE_1155
  VALUE_5049
  VALUE_5791
}

enum Enum1711 {
  VALUE_1248
  VALUE_1249
}

enum Enum1712 {
  VALUE_5792
  VALUE_5793
  VALUE_5794
  VALUE_5795
  VALUE_5796
  VALUE_5797
  VALUE_5798
  VALUE_5799
  VALUE_5800
  VALUE_5801
  VALUE_5802
  VALUE_5803
  VALUE_4298
  VALUE_5804
  VALUE_5805
  VALUE_5806
  VALUE_5807
  VALUE_5808
  VALUE_5809
  VALUE_5810
  VALUE_5811
  VALUE_5812
  VALUE_5813
  VALUE_5814
  VALUE_5815
  VALUE_5816
  VALUE_5817
  VALUE_5818
  VALUE_5819
  VALUE_5820
  VALUE_5821
}

enum Enum1713 {
  VALUE_5822
  VALUE_5823
  VALUE_5824
  VALUE_5825
  VALUE_4507
  VALUE_5826
  VALUE_5827
  VALUE_5828
  VALUE_5829
}

type Type7120 {
  """
  This is an anonymized description
  """
  field15366(
  arg7: Input3027): [Type7121!]!
  """
  This is an anonymized description
  """
  field15367: Boolean
}

input Input3027 {
  """
  This is an anonymized description
  """
  inputField2345: Boolean
}

type Type7121 {
  field2: ID!
  field278: String!
  field11: String
  field321: Union218
  field265: Scalar14
  field15368: Union218
  field8833: Scalar14
}

union Union218 = Type26 | Type910

type Mutation {
  field15369(arg20: [Input3028!]!): [Union219!]!
  field15370(arg20: [ID!]!): [Type7124!]
}

input Input3028 {
  inputField936: String!
  inputField5488: ID!
  inputField64: String
}

union Union219 = Type2013 | Type7124

type Type7122 {
  field15371: Type7123
  field15372: Boolean
  field15373: Type7126
  field15374: Boolean
  field15375: Type7129
  field15376: Boolean
  field15377: Type7127
  field15378: Boolean
  field15379: Type7130
  field15380: Boolean
  field15381: Type7128
  field15382: Boolean
}

type Type7123 {
  field2: ID!
  field321: Union218!
  field265: Scalar14!
  field15368: Union218
  field8833: Scalar14
}

extend type Mutation {
  field15383(arg20: Input3029!): Union220!
  field15384(arg20: ID!): Type7124
  field15385(arg20: Input3030!): Union221!
  field15386(arg20: ID!): Type7124
  field15387(arg20: Input3033!): Union224!
  field15388(arg20: ID!): Type7124
  field15389(arg20: Input3031!): Union222!
  field15390(arg20: ID!): Type7124
  field15391(arg20: Input3034!): Union225!
  field15392(arg20: ID!): Type7124
  field15393(arg20: Input3032!): Union223!
  field15394(arg20: ID!): Type7124
}

input Input3029 {
  inputField5488: ID!
}

union Union220 = Type2013 | Type7124

type Type7124 {
  field2971: [Type7125!]!
}

type Type7125 {
  field677: String!
  field80: Enum1714!
  field405: String!
}

enum Enum1714 {
  VALUE_1342
  VALUE_1343
  VALUE_1344
  VALUE_1345
  VALUE_1346
  VALUE_276
  VALUE_2670
}

type Type7126 {
  field2: ID!
  field321: Union218!
  field265: Scalar14!
  field15368: Union218
  field8833: Scalar14
}

input Input3030 {
  inputField5488: ID!
}

union Union221 = Type2013 | Type7124

type Type7127 {
  field2: ID!
  field321: Union218!
  field265: Scalar14!
  field15368: Union218
  field8833: Scalar14
}

input Input3031 {
  inputField5488: ID!
}

union Union222 = Type2013 | Type7124

type Type7128 {
  field2: ID!
  field321: Union218!
  field265: Scalar14!
  field15368: Union218
  field8833: Scalar14
}

input Input3032 {
  inputField5488: ID!
}

union Union223 = Type2013 | Type7124

type Type7129 {
  field2: ID!
  field321: Union218!
  field265: Scalar14!
  field15368: Union218
  field8833: Scalar14
}

input Input3033 {
  inputField5488: ID!
}

union Union224 = Type2013 | Type7124

type Type7130 {
  field2: ID!
  field321: Union218!
  field265: Scalar14!
  field15368: Union218
  field8833: Scalar14
}

input Input3034 {
  inputField5488: ID!
}

union Union225 = Type2013 | Type7124

type Query {
  field15395(arg1: [ID!]!): [Union226!]!
  field15396(arg1: [ID!]!): [Union227!]!
  field15397(arg1438: Boolean, arg26: Int, arg25: String, arg20: [Input3035]): Type7131
  field15398(arg1: [ID!]!): [Union229!]!
}

union Union226 = Type1994 | Type7124

union Union227 = Type2014 | Type7124

input Input3035 {
  inputField5489: String!
  inputField1275: String!
  inputField357: Enum550
}

type Type7131 {
  field366: Type119!
  field176: [Type7132]
}

type Type7132 {
  field369: String!
  field177: Type7133
}

type Type7133 {
  field15399: String!
  field15400: [Union228!]!
  field2971: [Type7125!]!
}

union Union228 = Type7134 | Type7135 | Type7136 | Type7137 | Type7138 | Type7139

type Type7134 {
  field15401: String!
}

type Type7135 {
  field405: String!
}

type Type7136 {
  field157: [String!]!
}

type Type7137 {
  field15402: [Enum550!]!
}

type Type7138 {
  field405: String!
}

type Type7139 {
  field405: String!
}

extend type Mutation {
  """
  This is an anonymized description
  """
  field15403(
  arg20: Input3036!): Union230!
  """
  This is an anonymized description
  """
  field15404(
  arg20: Input3037!): Union231!
  """
  This is an anonymized description
  """
  field15405(
  arg20: Input3038!): [Union233!]!
  """
  This is an anonymized description
  """
  field15406(
  arg20: Input3039!): Union232!
}

enum Enum1715 {
  VALUE_2389
  VALUE_2079
  VALUE_2080
  VALUE_3566
}

enum Enum1716 {
  VALUE_340
  VALUE_763
  VALUE_1012
}

enum Enum1717 {
  VALUE_5830
  VALUE_5831
  VALUE_5832
  VALUE_10
}

input Input3036 {
  inputField5490: ID!
  inputField5491: ID!
  inputField5492: Boolean!
  inputField5493: [Input3040!]
  inputField5494: [Enum550!]!
}

input Input3037 {
  inputField16: ID!
}

input Input3038 {
  inputField5495: ID
  inputField5491: ID
}

input Input3039 {
  inputField16: ID!
  inputField507: Enum1715!
  inputField613: ID
  inputField5493: [Input3040]
  inputField5496: Input3041
}

input Input3040 {
  inputField32: Enum1708
  inputField62: String
}

input Input3041 {
  inputField709: String!
  inputField5497: [Enum1717!]!
}

union Union229 = Type2006 | Type7124

union Union230 = Type2006 | Type7124

union Union231 = Type2006 | Type7124

union Union232 = Type2006 | Type7124

union Union233 = Type2006 | Type7124

type Type2006 @key(fields: "field2") {
  field2: ID!
  field15407: Type2014
  field25: Type2005
  field15408: [Enum550!]!
  field21: Enum1716
  field128: Type26
  field15409: [Type7140]
  field15410: Type7141
  field15411: Boolean
  field265: Scalar14!
  field321: Union218
  field266: Scalar14!
  field294: Union218
  field8833: Scalar14
  field15368: Union218
}

type Type7140 {
  field553: Enum1708!
  field36: String
}

type Type7141 {
  field1849: String!
  field15412: [Enum1717!]
}

extend type Query {
  field15413(arg1: [ID!]!): [Union234!]!
  field15414(arg1439: ID!): Union235!
}

union Union234 = Type2007 | Type7124

type Type2007 @key(fields: "field2") {
  field2: ID!
  field266: Scalar14!
  field108: Type29!
  field67: Type22!
  field15415: Type1966!
  field21: Enum1718!
  field128: Type26
  field15416: [Type7142!]
  field524: [Type7143!]
}

enum Enum1718 {
  VALUE_1518
  VALUE_1981
  VALUE_763
}

type Type7142 {
  field752: String!
  field36: String!
  field15417: String!
  field6081: String!
  field198: String!
}

type Type7143 {
  field752: String!
  field36: Float!
  field198: String!
  field15418: Enum1719
}

enum Enum1719 {
  VALUE_5833
  VALUE_5834
}

union Union235 = Type7144 | Type7124

type Type7144 {
  field152: String!
}

extend type Mutation {
  field15419(arg1440: ID!): Union236
  field15420(arg20: Input3042!): Union237!
}

union Union236 = Type7145 | Type7124

type Type7145 {
  field15421: ID!
}

input Input3042 {
  inputField16: ID!
  inputField149: Enum1718
  inputField5498: ID
}

union Union237 = Type2007 | Type7124