type Type1946 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type1949 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type1952 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type1958 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type1959 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type1930 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type1931 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type22 @key(fields: "field2") @extends {
  field2: Enum550! @external
}

"This is an anonymized description"
directive @oneOf on INPUT_OBJECT

"This is an anonymized description"
directive @directive1("""
This is an anonymized description
"""
arg47: String!) on OBJECT | INPUT_OBJECT | FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @directive2 on FIELD_DEFINITION

scalar Scalar1

type Type2026 @directive1(arg47: "anonymous-string") @key(fields: "field444") {
  field444: String! @directive2
  field10963: String!
  field29: Type1946
  field10964: Type1949
  field1286: Type1952
  field21: Enum1178!
  field10965: Int!
  field127: Int!
  field1816: String!
  field10966: Scalar14!
  field9: Scalar14!
  field10967: String!
  field119: Type1958
  field120: Type1959
  field10968: Enum550
  field10969: [String!]!
  field88: [Type1931!]!
  field93: [Type1930!]!
  field10970: Type5324
}

type Type5323 {
  field10971: [Type2026!]!
}

enum Enum1178 {
  VALUE_1008
  VALUE_340
  VALUE_4468
}

input Input2060 {
  inputField3838: String!
  inputField3839: ID
  inputField3840: ID
  inputField3841: ID
  inputField149: Enum1178!
  inputField3842: Input2062
}

input Input2061 {
  inputField3843: [String!]!
  inputField3839: ID
  inputField3840: ID
  inputField3841: ID
  inputField149: Enum1178!
  inputField3842: Input2062
}

type Type5324 {
  field10972: Enum1179!
  field2768: String
}

input Input2062 {
  inputField3844: Enum1179!
  inputField982: String
}

enum Enum1179 {
  VALUE_4469
  VALUE_4470
  VALUE_4471
  VALUE_10
}

input Input2063 {
  inputField239: Scalar11
  inputField240: Scalar11
}

type Type5325 {
  field10973: Type5326!
}

type Type5326 {
  field10974: [Type5327!]!
}

type Type5327 {
  field1744: Scalar14
  field36: Float
}

interface Interface217 {
  field3648: String
  field2768: String
}

type Type5328 {
  field2971: [Interface217]
}

type Type5329 implements Interface217 {
  field3648: String
  field2768: String
}

type Type5330 implements Interface217 {
  field3648: String
  field2768: String
}

type Type5331 implements Interface217 {
  field3648: String
  field2768: String
}

enum Enum1180 {
  VALUE_4472
  VALUE_218
}

input Input2064 {
  inputField3845: [Input2065!]!
  inputField357: String!
  inputField239: Scalar13!
  inputField3846: Scalar13!
  inputField1509: Scalar15!
  inputField3847: Enum1180
}

input Input2065 {
  inputField16: String
  inputField3848: [Input2066!]
  inputField3849: [Input2066!]
}

input Input2066 {
  inputField16: String!
  inputField125: Int!
  inputField553: [String!]
  inputField3850: String
}

enum Enum1181 {
  VALUE_231
  VALUE_232
  VALUE_2068
  VALUE_2069
  VALUE_2070
}

enum Enum1182 {
  VALUE_4473
  VALUE_1275
  VALUE_1638
}

type Type5332 {
  field53: Scalar13!
  field10975: Scalar13!
}

enum Enum1183 {
  VALUE_1249
  VALUE_1248
}

type Type5333 {
  field10976: String!
  field10977: Scalar1!
  field10978: Scalar9!
  field10979: Scalar1!
  field10980: Enum1184!
  field26: Enum1183
  field31: Enum1186
}

enum Enum1184 {
  VALUE_4474
  VALUE_4475
  VALUE_584
  VALUE_154
}

type Type5334 {
  field10981: Scalar1!
  field10982: [Type5333]!
  field10983: Scalar1!
  field10978: Scalar9!
  field10984: Enum1185!
  field10985: [Type5333]!
}

type Type5335 {
  field10986: Type5332!
  field3648: Type5334!
}

type Type5336 {
  field21: Enum1182!
  field10255: [Type5335]!
  field405: String
}

enum Enum1185 {
  VALUE_4252
  VALUE_4476
  VALUE_4477
}

type Type5337 {
  field10987: String!
  field10977: Scalar1!
  field10979: Scalar1!
}

type Type5338 {
  field21: Enum1182!
  field10988: [Type5337]!
  field405: String
}

input Input2067 {
  inputField239: Scalar13!
  inputField3846: Scalar13!
}

type Type5339 {
  field2: ID!
  field144: Boolean
  field145: [Type5340!]
  field148: [Type5340!]
}

enum Enum1186 {
  VALUE_1250
  VALUE_1251
}

type Type5340 {
  field2: ID!
  field147: Int!
  field146: [String!]
}

input Input2068 {
  inputField16: ID!
  inputField3851: Boolean
  inputField3848: [Input2069!]
  inputField3849: [Input2069!]
}

input Input2069 {
  inputField16: ID!
  inputField125: Int!
  inputField553: [String!]
}

type Type5341 {
  field53: Scalar13
  field54: Scalar13
  field55: Scalar15
}

input Input2070 {
  inputField239: Scalar13
  inputField240: Scalar13
  inputField1509: Scalar15
}

type Type5342 {
  field39: Scalar1!
  field38: Scalar9!
  field37: Scalar8!
}

input Input2071 {
  inputField98: Scalar9!
  inputField9: Scalar8!
}

enum Enum1187 {
  VALUE_1249
  VALUE_1248
}

enum Enum1188 {
  VALUE_1250
  VALUE_1251
}

enum Enum575 {
  VALUE_33
  VALUE_2393
  VALUE_31
}

type Type2027 @directive1(arg47: "anonymous-string") @key(fields: "field2") {
  field2: ID! @directive2
  field11: String!
  field58: Int!
  field10989: Type5342!
  field10990: [Type5341!]
  field10991: [Type5339!]
  field22: Boolean!
  field67: Type22!
  field26: Enum1187!
  field31: Enum1188!
  field9: Scalar14!
  field10: Scalar14!
  field61: Enum575!
}

input Input2072 {
  inputField64: String!
  inputField3852: Input2071!
  inputField3853: [Input2068!]
  inputField3854: [Input2070!]
  inputField3855: Enum1187!
  inputField3856: Enum1188!
  inputField357: Enum550!
  inputField3857: Enum575!
}

type Query @extends {
  field10992(arg1024: [String!]!): [Type2026]
  field10993(arg20: Input2063!): Type5325! @directive1(arg47: "anonymous-string")
  field10994(arg1025: Input2064!): String! @directive1(arg47: "anonymous-string")
  field10995(arg1026: String!, arg1027: Enum1181!): Type5336! @directive1(arg47: "anonymous-string")
  field10996(arg1026: String!, arg1028: Input2067!): Type5338! @directive1(arg47: "anonymous-string")
  field10997(arg1: [ID!]!): [Type2027]
}

type Mutation @extends {
  field10998(arg20: Input2060!): Union108! @directive1(arg47: "anonymous-string")
  field10999(arg20: Input2061!): Union109! @directive1(arg47: "anonymous-string")
  field11000(arg20: Input2072!): Union107! @directive1(arg47: "anonymous-string")
  field11001(arg23: ID!): Union107! @directive1(arg47: "anonymous-string")
}

union Union107 = Type2027 | Type5328

union Union108 = Type2026 | Type5328

union Union109 = Type5323 | Type5328