type Query @extends {
  field5155(arg29: Int!): Type1870!
  field5156(arg389: Enum557, arg510: String): [Type1872!]
}

type Mutation @extends {
  field5157(arg389: Enum557, arg29: Int!, arg511: Boolean): String!
  field5158(arg29: Int!, arg510: String!, arg512: Boolean): String!
  field5159(arg29: Int!, arg513: [Input869!]!): String!
  field5160(arg29: Int!, arg510: String!): String!
  field5161(arg389: Enum557!, arg510: String!, arg514: String!, arg515: String!, arg516: Boolean): Type1872!
  field5162(arg389: Enum557!, arg510: String!): Type1872!
  field5163(arg389: Enum557!, arg510: String!): String!
}

input Input869 {
  inputField1913: String!
  inputField1914: String!
}

type Type1870 {
  field21: Enum558!
  field109: Int!
  field1890: String
  field5164: [Type1871!]
}

type Type1871 {
  field5165: String!
  field5166: String!
  field5167: Boolean!
  field1741: Type1872
}

type Type1872 {
  field4748: Enum557!
  field5165: String!
  field5168: String!
  field5169: String!
  field5170: String
  field5171: String
  field5172: Boolean
}

enum Enum557 {
  VALUE_1818
  VALUE_2375
}

enum Enum558 {
  VALUE_1346
  VALUE_162
  VALUE_165
  VALUE_1119
}