type Mutation @extends {
  field15159(arg20: Input2974!): Type7025!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Type7020 {
  field880: String
}

type Type7021 {
  field787: [Type7022!]
}

type Type7022 {
  field7775: String
  field7776: Int
  field1715: String
}

type Type3153 @key(fields: "field556") {
  field554: Float!
  field198: String
  field723: Type7020
  field724: Type7021
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field100: Enum1672!
  field58: String
}

type Type7023 {
  field176: [Type7024!]
  field366: Type119!
}

type Type7024 {
  field369: String
  field177: Type3153!
}

type Query @extends {
  field15160(arg49: ID!): Type3153
  field15161(arg20: Input48!): Type7023!
}

type Type7025 {
  field575: Type3153
}

enum Enum1672 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

enum Enum31 {
  VALUE_214
  VALUE_215
}

input Input2973 {
  inputField223: String!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input49 {
  inputField16: String!
  "This is an anonymized description"
  inputField115: Enum31!
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input2974 {
  inputField120: String
  inputField110: String
  "This is an anonymized description"
  inputField111: String
  inputField121: String
  inputField135: Input2973!
  "This is an anonymized description"
  inputField122: Input49
  "This is an anonymized description"
  inputField123: Input50
  "This is an anonymized description"
  inputField124: String
  "This is an anonymized description"
  inputField125: String
  "This is an anonymized description"
  inputField126: String
}