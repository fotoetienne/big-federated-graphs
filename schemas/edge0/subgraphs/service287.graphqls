type Mutation @extends {
  field15183(arg20: Input2976!): Type7031!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Type7026 {
  field894: String
}

type Type7027 {
  field800: [Type7028!]
}

type Type7028 {
  field7802: String
  field7803: Int
  field1729: String
}

type Type3157 @key(fields: "field569") {
  field567: Float!
  field200: String
  field736: Type7026
  field737: Type7027
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum1675!
  field58: String
}

type Type7029 {
  field177: [Type7030!]
  field379: Type119!
}

type Type7030 {
  field382: String
  field178: Type3157!
}

type Query @extends {
  field15184(arg49: ID!): Type3157
  field15185(arg20: Input48!): Type7029!
}

type Type7031 {
  field588: Type3157
}

enum Enum1675 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

enum Enum31 {
  VALUE_214
  VALUE_215
}

input Input2975 {
  inputField223: String!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input49 {
  inputField16: String!
  "This is an anonymized description"
  inputField115: Enum31!
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input2976 {
  inputField120: String
  inputField110: String
  "This is an anonymized description"
  inputField111: String
  inputField121: String
  inputField135: Input2975!
  "This is an anonymized description"
  inputField122: Input49
  "This is an anonymized description"
  inputField123: Input50
  "This is an anonymized description"
  inputField124: String
  "This is an anonymized description"
  inputField125: String
  "This is an anonymized description"
  inputField126: String
}