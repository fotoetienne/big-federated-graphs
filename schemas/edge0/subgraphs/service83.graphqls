type Query @extends {
  field5127(arg508: ID!): Type1848 @experimental
  field5128(arg69: String!): Type1848 @experimental
  field5129(arg6: String, arg26: Int, arg25: String, arg28: Int, arg27: String, arg7: Enum551 = VALUE_2): Type1849 @experimental
}

type Mutation @extends {
  field5130(arg20: Input847!): Type1847 @experimental
  field5131(arg20: Input848!): Type1845 @experimental
  field5132(arg20: Input849!): Type1846 @experimental
  field5133(arg20: Input845!): Type1843 @experimental
  field5134(arg20: Input846!): Type1844 @experimental
}

interface Interface107 {
  field5135: ID!
}

type Type1839 implements Interface107 {
  field5135: ID!
  field5136: Type1861
}

type Type1840 implements Interface107 {
  field5135: ID!
  field5137: Type1862
}

type Type1841 {
  field379: Type119!
  field380: Int!
  field177: [Type1842!]
  field4403: [Interface107!]
}

type Type1842 {
  field178: Interface107!
  field382: String!
}

input Input844 {
  inputField1904: ID!
}

input Input845 {
  inputField1904: ID!
  inputField566: [Input844!]!
}

type Type1843 {
  field111: [Interface107!]!
  field5138: Scalar5
}

input Input846 {
  inputField1904: ID!
  inputField566: [Input844!]!
}

type Type1844 {
  field111: [Interface107!]!
  field5138: Scalar5
}

input Input847 {
  inputField64: String!
  inputField110: String!
  inputField1905: [Input851!]
}

input Input848 {
  inputField1904: ID!
  inputField1905: [Input851!]!
}

type Type1845 {
  field5138: Scalar5
}

input Input849 {
  inputField1904: ID!
  inputField1905: [Input851!]!
}

type Type1846 {
  field5138: Scalar5
}

input Input850 {
  inputField1904: ID!
  inputField1906: Input852
  inputField1907: Input853
}

input Input851 {
  inputField1904: ID!
  inputField1906: Input852
  inputField1907: Input853
  inputField536: Enum549
}

input Input852 {
  inputField1908: String
  inputField1909: String
}

input Input853 {
  inputField596: String
}

"""
This is an anonymized description
"""
scalar Scalar5

type Type1847 {
  field5138: Scalar5
  field5139: Type1848
}

type Type1848 @key(fields: "field5135") {
  field5135: ID!
  field802: String!
  field11: String!
  field200: String!
  field5140(arg26: Int!): Type1852
  field111(arg6: String, arg26: Int, arg25: String, arg28: Int, arg27: String): Type1841
  field5141: Type1859
  field5142: Enum550
}

type Type1849 {
  field379: Type119!
  field177: [Type1850!]
  field4403: [Type1848!]
}

type Type1850 {
  field382: String!
  field178: Type1848
}

type Type1851 {
  field379: Type119!
  field177: [Type1853!]
  field4403: [Type1855!]
}

type Type1852 {
  field379: Type119!
  field177: [Type1854!]
  field4403: [Type1856!]
}

type Type1853 {
  field178: Type1855!
  field382: String!
}

type Type1854 {
  field178: Type1856!
  field382: String!
}

type Type1855 {
  """
  This is an anonymized description
  """
  field5135: ID!
  field5143: Type1858
}

type Type1856 {
  """
  This is an anonymized description
  """
  field5135: ID!
  field5144: Type1858
  field1658: Enum549
}

enum Enum549 {
  VALUE_812
  VALUE_2295
}

enum Enum550 {
  VALUE_877
  VALUE_812
  VALUE_2295
  VALUE_2
}

enum Enum551 {
  VALUE_2296
  VALUE_2297
  VALUE_2298
  VALUE_2
}

type Type1857 @key(fields: "field5135") {
  """
  This is an anonymized description
  """
  field5135: ID!
  field5145: Type1848
}

type Type1858 @key(fields: "field5135") @extends {
  field5135: ID! @external
}

type Type1859 @key(fields: "field11") @key(fields: "field5135") @extends {
  field5135: ID @external
  field11: ID @external
}

type Type1860 @key(fields: "field5135") @extends {
  field5135: ID! @external
  field5146: Type1857
}

type Type1861 @key(fields: "field5135") @extends {
  field5135: ID! @external
}

type Type1862 @key(fields: "field5135") @extends {
  field5135: ID! @external
}

extend type Mutation {
  field5147(arg20: Input854!): Type1863 @experimental
  field5148(arg20: Input855!): Type1864 @experimental
  field5149(arg20: Input856!): Type1865 @experimental
}

input Input854 {
  inputField42: String!
  inputField1910: String!
}

input Input855 {
  inputField42: String!
  inputField1910: String!
}

input Input856 {
  inputField42: String!
  inputField1910: String!
}

type Type1863 {
  field418: String
}

type Type1864 {
  field418: String
}

type Type1865 {
  field5150: Boolean
  field418: String
}