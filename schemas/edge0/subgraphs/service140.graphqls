type Mutation @extends {
  field7746(arg20: Input1461!): Type4162!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field7747(arg49: ID!): Type4163
  field7748(arg20: Input48!): Type4164!
}

type Type4162 {
  field575: Type4163
}

type Type4163 {
  field554: Float!
  field198: String
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field100: Enum820!
  field58: String
}

type Type4164 {
  field176: [Type4165!]
  field366: Type119!
}

type Type4165 {
  field369: String
  field177: Type4163!
}

enum Enum820 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input1461 {
  inputField120: String
  inputField110: String
  inputField111: String
  inputField121: String
  inputField135: Input1463!
  inputField123: Input50
  inputField125: String
  inputField126: String
}

input Input1462 {
  inputField16: String!
}

input Input1463 {
  inputField599: Input1464
}

input Input1464 {
  inputField712: String!
  inputField991: Input1462!
  inputField2839: Input1462!
}