type Mutation @extends {
  field7773(arg20: Input1463!): Type4168!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field7774(arg49: ID!): Type4169
  field7775(arg20: Input48!): Type4170!
}

type Type4168 {
  field588: Type4169
}

type Type4169 {
  field567: Float!
  field200: String
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum823!
  field58: String
}

type Type4170 {
  field177: [Type4171!]
  field379: Type119!
}

type Type4171 {
  field382: String
  field178: Type4169!
}

enum Enum823 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input1463 {
  inputField120: String
  inputField110: String
  inputField111: String
  inputField121: String
  inputField135: Input1465!
  inputField123: Input50
  inputField125: String
  inputField126: String
}

input Input1464 {
  inputField16: String!
}

input Input1465 {
  inputField599: Input1466
}

input Input1466 {
  inputField712: String!
  inputField991: Input1464!
  inputField2843: Input1464!
}