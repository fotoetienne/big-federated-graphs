type Type10400 {
  field2: String!
}

type Type10401 {
  field177: [Type10402!]
  field379: Type119!
}

type Type10402 {
  field382: String
  field178: Type10400!
}

type Type10403 {
  field131: String!
}

type Type10404 {
  field576: String!
  field577: Type10403
  field100: String!
}

type Type10405 {
  field567: Float!
  field200: String
  field4403: Type10401!
  field23047: Type10401!
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum2556!
  field58: String
}

type Type10406 {
  field177: [Type10407!]
  field379: Type119!
}

type Type10407 {
  field382: String
  field178: Type10405!
}

type Mutation @extends {
  field23048(arg20: Input4640!): Type10404!
  field23049(arg20: Input4640!): Type446!
  field23050(arg20: Input4641!): Type10408!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field23051(arg49: ID!): Type10405
  field23052(arg20: Input48!): Type10406!
}

type Type446 {
  field576: String!
  field100: String!
}

type Type10408 {
  field588: Type10405
}

enum Enum2556 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input4640 {
  inputField110: String
  inputField111: String
  inputField112: String!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input4641 {
  inputField120: String
  inputField110: String
  inputField111: String
  inputField121: String
  inputField123: Input50
  inputField125: String
  inputField126: String
}