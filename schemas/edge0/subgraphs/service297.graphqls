type Type7161 {
  field15457: Type7165!
  field554: Float!
  field198: String
  field405: Type7170!
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field100: Enum1725!
  field58: String
}

type Type7162 {
  field176: [Type7163!]
  field366: Type119!
}

type Type7163 {
  field369: String
  field177: Type7161!
}

type Mutation @extends {
  field15458(arg20: Input3048!): Type7168!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field15459(arg49: ID!): Type7161
  field15460(arg20: Input48!): Type7162!
}

type Type7164 {
  field1202: [Type7169!]!
}

type Type7165 {
  field176: [Type7166!]
  field366: Type119!
}

type Type7166 {
  field369: String
  field177: Type7164!
}

type Type7167 {
  field5943: Type7169!
}

type Type7168 {
  field563: String!
  field564: Type7167
  field100: String!
}

type Type7169 {
  field6103: String!
  field2609: Enum1726!
}

type Type7170 {
  field176: [Type7171!]
  field366: Type119!
}

type Type7171 {
  field369: String
  field177: Type7169!
}

enum Enum1725 {
  VALUE_212
  VALUE_5841
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

enum Enum1726 {
  VALUE_5842
  VALUE_5843
  VALUE_1284
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input3048 {
  inputField110: String
  inputField111: String
  inputField350: Input3049!
  inputField112: String!
}

input Input3049 {
  inputField266: String!
}