type Mutation @extends {
  field7361(arg20: Input1374!): Type4013!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field7362(arg49: ID!): Type4018
  field7363(arg20: Input48!): Type4019!
}

type Type4013 {
  field588: Type4018
}

type Type4014 {
  field2: String!
}

type Type4015 {
  field567: Float!
  field3691: Float
  field3692: Float
  field3693: ID
  field569: ID!
  field3695: ID!
  field7364: Type4014!
  field7365: String!
}

type Type4016 {
  field177: [Type4017!]
  field379: Type119!
}

type Type4017 {
  field382: String
  field178: Type4015!
}

type Type4018 {
  field567: Float!
  field200: String
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field7366: Type4024!
  field7367: Type4016!
  field100: Enum786!
  field58: String
}

type Type4019 {
  field177: [Type4020!]
  field379: Type119!
}

type Type4020 {
  field382: String
  field178: Type4018!
}

type Type4021 {
  field11: String!
  field649: Type4022!
  field7368: [String!]!
  field7369: [Type4022!]!
}

type Type4022 {
  field7370: Type4014
  field7371: String
  field2756: Type4014!
  field94: String!
  field7372: Type4014!
  field7373: String!
}

type Type4023 {
  field1789: [Type4021!]!
}

type Type4024 {
  field177: [Type4025!]
  field379: Type119!
}

type Type4025 {
  field382: String
  field178: Type4023!
}

enum Enum786 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input1374 {
  inputField120: String
  inputField110: String
  inputField111: String
  inputField121: String
  inputField123: Input50
  inputField125: String
  inputField126: String
}