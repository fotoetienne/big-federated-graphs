type Type29 @extends @key(fields: "field109") {
  field109: Int! @external
}

type Mutation @extends {
  field27515(arg20: Input6180!): Type13971!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Type13963 {
  field108: Type29
}

type Type13964 {
  field177: [Type13965!]
  field379: Type119!
}

type Type13965 {
  field382: String
  field178: Type13963!
}

type Type13966 {
  field567: Float!
  field3691: Float
  field3692: Float
  field3693: ID
  field569: ID!
  field3695: ID!
  field7364: Type13963!
  field7365: String!
}

type Type13967 {
  field177: [Type13968!]
  field379: Type119!
}

type Type13968 {
  field382: String
  field178: Type13966!
}

type Type3165 @key(fields: "field569") {
  field567: Float!
  field200: String
  field27516: Type13964!
  field27517: Type13967!
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum3188!
  field58: String
}

type Type13969 {
  field177: [Type13970!]
  field379: Type119!
}

type Type13970 {
  field382: String
  field178: Type3165!
}

type Query @extends {
  field27518(arg49: ID!): Type3165
  field27519(arg20: Input48!): Type13969!
}

type Type13971 {
  field588: Type3165
}

enum Enum3188 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input6178 {
  inputField187: Input6179!
}

input Input6179 {
  inputField187: Int!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input6180 {
  inputField120: String
  inputField110: String
  inputField111: String
  inputField121: String
  inputField135: Input6178!
  inputField123: Input50
  inputField125: String
  inputField126: String
}