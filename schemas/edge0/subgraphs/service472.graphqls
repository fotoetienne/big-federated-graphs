type Mutation @extends {
  field25005(arg20: Input5150!): Type11513!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field25006(arg49: ID!): Type3181
  field25007(arg20: Input48!): Type11514!
}

type Type11513 {
  field575: Type3181
}

type Type3181 @key(fields: "field556") {
  field554: Float!
  field198: String
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field100: Enum2818!
  field58: String
}

type Type11514 {
  field176: [Type11515!]
  field366: Type119!
}

type Type11515 {
  field369: String
  field177: Type3181!
}

enum Enum31 {
  VALUE_214
  VALUE_215
}

enum Enum2818 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input49 {
  inputField16: String!
  "This is an anonymized description"
  inputField115: Enum31!
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input5150 {
  inputField120: String
  inputField110: String
  "This is an anonymized description"
  inputField111: String
  inputField121: String
  inputField135: Input5152!
  "This is an anonymized description"
  inputField122: Input49
  "This is an anonymized description"
  inputField123: Input50
  "This is an anonymized description"
  inputField124: String
  "This is an anonymized description"
  inputField125: String
  "This is an anonymized description"
  inputField126: String
}

input Input5151 {
  inputField5636: String!
  inputField64: String!
  inputField5637: String!
  inputField5638: String!
  inputField5639: String!
  inputField5640: [String!]!
  inputField5641: [String!]!
}

input Input5152 {
  inputField5642: Input5151
  inputField5644: String!
}