type Type16836 {
  field3431: String
  field133: String
  field3430: String
}

type Type16837 {
  field176: [Type16838!]
  field366: Type119!
}

type Type16838 {
  field369: String
  field177: Type16836!
}

type Type3093 @key(fields: "field556") {
  field554: Float!
  field198: String
  field32942: Type16837!
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field100: Enum4016!
  field58: String
}

type Type16839 {
  field176: [Type16840!]
  field366: Type119!
}

type Type16840 {
  field369: String
  field177: Type3093!
}

type Mutation @extends {
  field32943(arg20: Input7893!): Type16841!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field32944(arg49: ID!): Type3093
  field32945(arg20: Input48!): Type16839!
}

type Type16841 {
  field575: Type3093
}

enum Enum4016 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input7888 {
  inputField11265: Input7889!
}

input Input7889 {
  inputField11266: Input7890!
}

input Input7890 {
  inputField10499: String!
}

input Input7891 {
  inputField5096: String!
  inputField5036: Input7892
}

input Input7892 {
  inputField11267: Input7888!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input7893 {
  inputField120: String
  inputField110: String
  inputField111: String
  inputField121: String
  inputField135: Input7891!
  inputField123: Input50
  inputField125: String
  inputField126: String
}