type Type14395 {
  field554: Float!
  field198: String
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field100: Enum3341!
  field58: String
}

type Type14396 {
  field176: [Type14397!]
  field366: Type119!
}

type Type14397 {
  field369: String
  field177: Type14395!
}

type Type14398 {
  field787: Int!
}

type Type14399 {
  field563: String!
  field564: Type14398
  field100: String!
}

type Mutation @extends {
  field28349(arg20: Input6454!): Type446!
  field28350(arg20: Input6456!): Type14399!
  field28351(arg20: Input6456!): Type446!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field28352(arg49: ID!): Type14395
  field28353(arg20: Input48!): Type14396!
}

type Type446 {
  field563: String!
  field100: String!
}

enum Enum3341 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input6454 {
  inputField110: String
  inputField111: String
  inputField350: Input6455!
  inputField112: String!
}

input Input6455 {
  inputField3224: Int!
  inputField3225: Int!
}

input Input6456 {
  inputField110: String
  inputField111: String
  inputField350: Input6457!
  inputField112: String!
}

input Input6457 {
  inputField3224: Int!
  inputField3225: Int!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}