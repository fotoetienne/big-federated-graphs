type Type14401 {
  field567: Float!
  field200: String
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum3344!
  field58: String
}

type Type14402 {
  field177: [Type14403!]
  field379: Type119!
}

type Type14403 {
  field382: String
  field178: Type14401!
}

type Type14404 {
  field800: Int!
}

type Type14405 {
  field576: String!
  field577: Type14404
  field100: String!
}

type Mutation @extends {
  field28376(arg20: Input6456!): Type446!
  field28377(arg20: Input6458!): Type14405!
  field28378(arg20: Input6458!): Type446!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field28379(arg49: ID!): Type14401
  field28380(arg20: Input48!): Type14402!
}

type Type446 {
  field576: String!
  field100: String!
}

enum Enum3344 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input6456 {
  inputField110: String
  inputField111: String
  inputField350: Input6457!
  inputField112: String!
}

input Input6457 {
  inputField3228: Int!
  inputField3229: Int!
}

input Input6458 {
  inputField110: String
  inputField111: String
  inputField350: Input6459!
  inputField112: String!
}

input Input6459 {
  inputField3228: Int!
  inputField3229: Int!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}