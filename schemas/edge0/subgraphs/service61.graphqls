type Mutation @extends {
  field2954(arg20: Input430!): Type991!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field2955(arg49: ID!): Type992
  field2956(arg20: Input48!): Type993!
}

type Type991 {
  field588: Type992
}

type Type992 {
  field567: Float!
  field200: String
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum288!
  field58: String
}

type Type993 {
  field177: [Type994!]
  field379: Type119!
}

type Type994 {
  field382: String
  field178: Type992!
}

enum Enum288 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input430 {
  inputField120: String
  inputField110: String
  inputField111: String
  inputField121: String
  inputField123: Input50
  inputField125: String
  inputField126: String
}