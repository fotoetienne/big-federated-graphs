type Type2423 @key(fields: "field2") {
  field2: ID!
  field11: String!
  field5795: Scalar11!
  field6401: Type6667!
  field6400: String!
  field9238: String!
  field5597: Float!
  field14248: [Type6668]
  field8665: [String]!
  field270: Scalar14!
  field271: Scalar14!
}

type Type6667 {
  field2: ID!
  field11: String!
}

type Type6668 {
  field11: String!
  field80: Enum1556!
  field14249: Scalar11!
  field8589: Scalar11
}

enum Enum1556 {
  VALUE_5384
  VALUE_5385
  VALUE_5386
  VALUE_5387
  VALUE_5388
}

input Input2685 {
  inputField64: String!
  inputField2274: Scalar11!
  inputField5034: ID!
  inputField2275: String!
  inputField3327: String!
  inputField2015: Float!
}

input Input2686 {
  inputField64: String!
  inputField115: Enum1556!
  inputField5035: Scalar11!
  inputField3046: Scalar11!
}

type Query @extends {
  field14250: [Type2423!]!
  field14251(arg23: ID!): Type2423
  field14252(arg74: String!): [Type2423!]!
  field14253(arg603: ID!): [Type6668]
}

type Mutation @extends {
  field14254(arg20: Input2685!): Type2423
  field14255(arg603: ID!, arg20: Input2685!): Type2423
  field14256(arg603: ID!): Boolean
  field14257(arg603: ID!, arg20: Input2686!): Type6668
}