enum Enum975 {
  VALUE_3839
  VALUE_3840
  VALUE_3841
  VALUE_3842
  VALUE_3843
  VALUE_3844
  VALUE_3845
  VALUE_3846
  VALUE_3847
  VALUE_3848
  VALUE_3849
  VALUE_2845
  VALUE_3850
  VALUE_3851
  VALUE_1189
}

interface Interface199 {
  field7046: Enum975!
  field8893: Boolean!
}

type Type4708 {
  """
  This is an anonymized description
  """
  field2: ID
  """
  This is an anonymized description
  """
  field669: [String!]
}

type Type4709 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  field8894: Int
}

type Type4710 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  field8895: Type22
}

type Type4711 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  field8896: Enum2558
}

type Type4712 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  field8897: Type2721
}

type Type4713 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  field8898: Type2721
}

type Type4714 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  field8899: Type2721
}

type Type4715 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  field8900: Type2721
}

type Type4716 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  field405: Type2721
}

type Type4717 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  """
  This is an anonymized description
  """
  field8901: Type795
}

type Type4718 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  field8902: Type21
}

type Type4719 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  """
  This is an anonymized description
  """
  field8903: Type795
}

type Type4720 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  field6732: String
}

type Type4721 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  field8904: Type4708
}

type Type4722 implements Interface199 {
  field7046: Enum975!
  field8893: Boolean!
  field5465: Type2569
}

union Union95 = Type4709 | Type4710 | Type4711 | Type4712 | Type4713 | Type4714 | Type4715 | Type4716 | Type4717 | Type4718 | Type4719 | Type4720 | Type4721 | Type4722

type Type2721 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type2569 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type795 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type22 @key(fields: "field2") @extends {
  field2: Enum553! @external
}

type Type21 @key(fields: "field319") @extends {
  field319: String! @external
}

extend type Query {
  field8905(arg76: Input1684!): Type4730!
  field8906(arg76: Input1686!): Type4730!
}

type Type4723 {
  """
  This is an anonymized description
  """
  field2: ID
  field264: String!
  field11: String
}

type Type4724 {
  field36: Union95!
  field6142: [Type4728!]!
}

type Type4725 {
  field7046: Enum975!
  field2831: [Union95!]!
  field8907: [Type4724!]!
}

type Type4726 {
  field8908: Union95!
}

type Type4727 {
  field6142: [Type4728!]!
}

union Union96 = Type4726 | Type4727

type Type4728 {
  field7046: Enum975!
  field1920: Type4723
  field8909: String
  field8910: String!
  field8911: [Union96!]!
}

type Type4729 {
  field8912: Union95!
  field6142: [Type4728!]!
}

type Type4730 {
  field2032: [Type4725!]!
  field6142: [Type4728!]!
  field8424: [Type4729!]!
}

input Input1678 {
  inputField16: ID!
}

input Input1679 {
  """
  This is an anonymized description
  """
  inputField16: ID!
}

input Input1680 {
  inputField326: String!
}

input Input1681 {
  inputField16: ID!
}

input Input1682 {
  """
  This is an anonymized description
  """
  inputField16: ID!
  """
  This is an anonymized description
  """
  inputField128: [String!]
}

input Input1683 {
  """
  This is an anonymized description
  """
  inputField3161: Int
  inputField3162: Enum553
  inputField3163: Enum2558
  inputField3164: Input1678
  inputField3165: Input1678
  inputField3166: Input1678
  inputField3167: Input1678
  inputField3168: Input1678
  inputField3169: Input1679
  inputField3170: Input1680
  inputField3171: Input1679
  inputField3172: String
  """
  This is an anonymized description
  """
  inputField3173: [Enum975!]
  inputField3174: [Input1682!]
  inputField3175: Input1681
}

input Input1684 {
  inputField971: Input1683!
  inputField3176: [Enum975!]!
  inputField851: String
}

input Input1685 {
  """
  This is an anonymized description
  """
  inputField16: ID
  inputField2935: String!
  inputField1762: Boolean!
}

input Input1686 {
  inputField971: Input1683!
  inputField3176: [Enum975!]!
  inputField3177: [Input1685!]!
  inputField3178: Boolean
}

extend type Query {
  field8913: Type4733!
}

type Type4731 {
  field8914: Boolean!
  field765: String!
  """
  This is an anonymized description
  """
  field80: String!
  """
  This is an anonymized description
  """
  field1211: [String!]
}

type Type4732 {
  field7046: String!
  """
  This is an anonymized description
  """
  field80: String!
  """
  This is an anonymized description
  """
  field914: [Type4731!]
  """
  This is an anonymized description
  """
  field1211: [String!]
}

type Type4733 {
  field2032: [Type4732!]!
}

type Mutation

type Query

scalar Scalar1

extend type Query {
  field8915: [Type2722!]!
  field8916(arg23: ID!): Type2722
}

extend type Mutation {
  field8917(arg20: Input1689!): Type4734
  field8918(arg20: Input1687!): Type2722!
  field8919(arg20: Input1688!): Type2722!
}

input Input1687 {
  inputField2935: String!
  inputField64: String!
  inputField110: String
  inputField1762: Boolean!
}

input Input1688 {
  inputField16: ID!
  inputField17: Scalar1!
  inputField2935: String
  inputField64: String
  inputField110: String
  inputField1762: Boolean
}

input Input1689 {
  inputField16: ID!
}

type Type4734 {
  """
  This is an anonymized description
  """
  field559: Boolean
}

type Type2722 @key(fields: "field2") {
  field2: ID!
  field58: Scalar1!
  field264: String
  field332: String
  field385: Scalar14
  field304: String
  field386: Scalar14
  field11: String
  field200: String
  field797: Boolean
}