enum Enum2636 {
  VALUE_3413
  VALUE_8406
  VALUE_8407
}

type Type10612 {
  field858: Type10614!
  field1546: Type10613
}

type Type10613 {
  field11: String!
  field396: String
}

type Type10614 {
  field857: String
  field859: String
}

type Type10615 {
  field851: Boolean
  field849: Type10612
  field850: Type10612
  field12947: [Type10616!]!
}

type Type10616 {
  field752: Enum2637!
  field631: String!
  field36: String!
}

enum Enum2637 {
  VALUE_8408
  VALUE_8409
}

type Type10617 {
  field1571: Int
}

type Type10618 {
  field6497: String!
  field11: String!
}

type Type10619 {
  field23369: String!
  field23370: String!
  field23371: String! @experimental
  field2: String! @experimental
}

type Type10620 {
  field1546: Type10618
  field23372: [Type10619]
  field23373: String @experimental
}

type Type10621 {
  field2: ID!
  field109: Int!
  field23374: [String]!
  field23375: String
  field847: Type10622
  field8820: String
  field23376: String
  field23377: Type10615
  field23378: Type10620
  field20710: Enum2636
  field100: Enum2638!
  field23379: Type10617
}

enum Enum2638 {
  VALUE_1122
  VALUE_1260
  VALUE_8410
}

type Type10622 {
  field395: String!
  field668: String!
}

input Input4808 {
  inputField8355: [String]!
  inputField8356: String
  inputField2363: Input4812
  inputField8357: String
  inputField8358: String
  inputField179: Input4810
  inputField8359: Input4811
}

input Input4809 {
  inputField8356: String
  inputField8358: String
  inputField8357: String
  inputField179: Input4810
  inputField8359: Input4811
  inputField2363: Input4812
}

input Input4810 {
  inputField64: String
  inputField182: String
  inputField186: String
}

input Input4811 {
  inputField186: String
}

input Input4812 {
  inputField206: String!
  inputField205: String!
}

type Type10623 {
  field23380: [Type10621!]!
}

type Type10624 {
  field23381: Type10621!
}

type Type10625 {
  field23382: Type10621!
}

type Type10626 {
  field23383: ID!
  field23384: ID!
}

type Type10627 {
  field790: [Type10628!]!
}

type Type10628 {
  field11: String
}

type Type10629 {
  field23385: [Type10630!]!
  field23386: [Type10631!]!
}

type Type10630 {
  field857: String!
  field11: String!
  field1546: Type10632
  field80: Enum2639!
}

type Type10631 {
  field6497: String!
  field1546: Type10632!
}

enum Enum2639 {
  VALUE_8411
  VALUE_8412
}

type Type10632 {
  field11: String!
  field396: String
}

type Type10633 {
  field6497: String!
  field23387: String
  field671: String
}

type Query {
  field23380(arg29: Int!): Type10623!
  field23388(arg29: Int!): Type10627!
  field23389(arg65: String!): Type10633!
  field23390(arg29: Int): Type10629!
  field23391: [Type10634!]! @experimental
  field23392(arg23: ID!): Type10634 @experimental
  field23393(arg29: String): [Type10642!]! @experimental
  field23394(arg29: String!): [Type10643!]! @experimental
  field23395(arg23: ID!, arg29: String!): Type10643 @experimental
}

type Type10634 {
  field2: ID!
  field11: String!
  field7760: [Type10635!]!
  field7761: [Type10636!]!
  field1771: [String!]!
  field7762: [String!]!
  field321: String!
  field265: String!
  field7763: String!
  field7764: String!
}

type Type10635 {
  field7765: Enum2640!
  field58: String!
}

type Type10636 {
  field2: ID!
  field23396: String!
  field58: String!
  field7767: Type10637!
  field7768: Type10638!
  field7769: Type10639!
  field321: String!
  field265: String!
}

type Type10637 {
  field656: [String!]!
  field198: String
  field7770: String
}

type Type10638 {
  field80: Enum2641!
  field929: [String!]!
  field1910: [String!]!
}

type Type10639 {
  field80: Enum2642!
  field858: Type10640
}

type Type10640 {
  field137: String!
  field11: String!
  field58: String!
}

type Type10641 {
  field2: ID!
  field1535: [String!]!
  field7771: [String!]!
}

type Type10642 {
  field2: ID!
  field109: String!
  field23396: String!
  field7772: Enum2640!
}

type Type10643 {
  field2: ID!
  field11: String!
  field7767: Type10637!
  field7768: Type10638!
  field7769: Type10639!
  field7765: Enum2640!
}

enum Enum2640 {
  VALUE_3385
  VALUE_2521
  VALUE_3386
}

enum Enum2641 {
  VALUE_3387
  VALUE_3388
  VALUE_2
}

enum Enum2642 {
  VALUE_3389
}

input Input4813 {
  inputField64: String!
  inputField2840: Input4815!
}

input Input4814 {
  inputField8360: ID!
  inputField2840: Input4815!
}

input Input4815 {
  inputField2842: Input4817!
  inputField2843: Input4818!
  inputField2844: Input4819!
}

input Input4816 {
  inputField433: [String!]
  inputField2845: [String!]
  inputField2846: Enum2640
}

input Input4817 {
  inputField128: [String!]!
  inputField110: String
  inputField2847: String
}

input Input4818 {
  inputField115: Enum2641!
  inputField233: [String!]
  inputField95: [String!]
}

input Input4819 {
  inputField115: Enum2642!
  inputField2848: String
  inputField2849: Input4820
}

input Input4820 {
  inputField596: String!
  inputField64: String!
  inputField17: String!
}

input Input4821 {
  inputField187: String!
  inputField8360: ID!
  inputField2850: Enum2640!
}

type Mutation {
  field23397(arg29: Int!, arg1908: Enum2636!, arg20: Input4808!): Type10624!
  field23398(arg23: ID!, arg20: Input4809!): Type10625!
  field23399(arg1909: ID!, arg1910: ID!): Type10626!
  field23400(arg20: Input4813!): Type10634! @experimental
  field23401(arg23: ID!, arg20: Input4816!): Type10634! @experimental
  field23402(arg20: Input4814!): Type10636! @experimental
  field23403(arg1911: ID!, arg745: ID!, arg746: Enum2640!): Type10634! @experimental
  field23404(arg20: Input4821!): Type10642! @experimental
  field23405(arg747: ID!): Boolean! @experimental
}