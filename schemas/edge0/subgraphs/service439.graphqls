enum Enum2639 {
  VALUE_3416
  VALUE_8409
  VALUE_8410
}

type Type10618 {
  field872: Type10620!
  field1560: Type10619
}

type Type10619 {
  field11: String!
  field409: String
}

type Type10620 {
  field871: String
  field873: String
}

type Type10621 {
  field865: Boolean
  field863: Type10618
  field864: Type10618
  field12974: [Type10622!]!
}

type Type10622 {
  field765: Enum2640!
  field644: String!
  field36: String!
}

enum Enum2640 {
  VALUE_8411
  VALUE_8412
}

type Type10623 {
  field1585: Int
}

type Type10624 {
  field6515: String!
  field11: String!
}

type Type10625 {
  field23396: String!
  field23397: String!
  field23398: String! @experimental
  field2: String! @experimental
}

type Type10626 {
  field1560: Type10624
  field23399: [Type10625]
  field23400: String @experimental
}

type Type10627 {
  field2: ID!
  field109: Int!
  field23401: [String]!
  field23402: String
  field861: Type10628
  field8847: String
  field23403: String
  field23404: Type10621
  field23405: Type10626
  field20735: Enum2639
  field100: Enum2641!
  field23406: Type10623
}

enum Enum2641 {
  VALUE_1124
  VALUE_1262
  VALUE_8413
}

type Type10628 {
  field408: String!
  field681: String!
}

input Input4810 {
  inputField8359: [String]!
  inputField8360: String
  inputField2363: Input4814
  inputField8361: String
  inputField8362: String
  inputField179: Input4812
  inputField8363: Input4813
}

input Input4811 {
  inputField8360: String
  inputField8362: String
  inputField8361: String
  inputField179: Input4812
  inputField8363: Input4813
  inputField2363: Input4814
}

input Input4812 {
  inputField64: String
  inputField182: String
  inputField186: String
}

input Input4813 {
  inputField186: String
}

input Input4814 {
  inputField206: String!
  inputField205: String!
}

type Type10629 {
  field23407: [Type10627!]!
}

type Type10630 {
  field23408: Type10627!
}

type Type10631 {
  field23409: Type10627!
}

type Type10632 {
  field23410: ID!
  field23411: ID!
}

type Type10633 {
  field803: [Type10634!]!
}

type Type10634 {
  field11: String
}

type Type10635 {
  field23412: [Type10636!]!
  field23413: [Type10637!]!
}

type Type10636 {
  field871: String!
  field11: String!
  field1560: Type10638
  field80: Enum2642!
}

type Type10637 {
  field6515: String!
  field1560: Type10638!
}

enum Enum2642 {
  VALUE_8414
  VALUE_8415
}

type Type10638 {
  field11: String!
  field409: String
}

type Type10639 {
  field6515: String!
  field23414: String
  field684: String
}

type Query {
  field23407(arg29: Int!): Type10629!
  field23415(arg29: Int!): Type10633!
  field23416(arg65: String!): Type10639!
  field23417(arg29: Int): Type10635!
  field23418: [Type10640!]! @experimental
  field23419(arg23: ID!): Type10640 @experimental
  field23420(arg29: String): [Type10648!]! @experimental
  field23421(arg29: String!): [Type10649!]! @experimental
  field23422(arg23: ID!, arg29: String!): Type10649 @experimental
}

type Type10640 {
  field2: ID!
  field11: String!
  field7787: [Type10641!]!
  field7788: [Type10642!]!
  field1785: [String!]!
  field7789: [String!]!
  field332: String!
  field270: String!
  field7790: String!
  field7791: String!
}

type Type10641 {
  field7792: Enum2643!
  field58: String!
}

type Type10642 {
  field2: ID!
  field23423: String!
  field58: String!
  field7794: Type10643!
  field7795: Type10644!
  field7796: Type10645!
  field332: String!
  field270: String!
}

type Type10643 {
  field669: [String!]!
  field200: String
  field7797: String
}

type Type10644 {
  field80: Enum2644!
  field943: [String!]!
  field1924: [String!]!
}

type Type10645 {
  field80: Enum2645!
  field872: Type10646
}

type Type10646 {
  field137: String!
  field11: String!
  field58: String!
}

type Type10647 {
  field2: ID!
  field1549: [String!]!
  field7798: [String!]!
}

type Type10648 {
  field2: ID!
  field109: String!
  field23423: String!
  field7799: Enum2643!
}

type Type10649 {
  field2: ID!
  field11: String!
  field7794: Type10643!
  field7795: Type10644!
  field7796: Type10645!
  field7792: Enum2643!
}

enum Enum2643 {
  VALUE_3388
  VALUE_2524
  VALUE_3389
}

enum Enum2644 {
  VALUE_3390
  VALUE_3391
  VALUE_2
}

enum Enum2645 {
  VALUE_3392
}

input Input4815 {
  inputField64: String!
  inputField2844: Input4817!
}

input Input4816 {
  inputField8364: ID!
  inputField2844: Input4817!
}

input Input4817 {
  inputField2846: Input4819!
  inputField2847: Input4820!
  inputField2848: Input4821!
}

input Input4818 {
  inputField433: [String!]
  inputField2849: [String!]
  inputField2850: Enum2643
}

input Input4819 {
  inputField128: [String!]!
  inputField110: String
  inputField2851: String
}

input Input4820 {
  inputField115: Enum2644!
  inputField233: [String!]
  inputField95: [String!]
}

input Input4821 {
  inputField115: Enum2645!
  inputField2852: String
  inputField2853: Input4822
}

input Input4822 {
  inputField596: String!
  inputField64: String!
  inputField17: String!
}

input Input4823 {
  inputField187: String!
  inputField8364: ID!
  inputField2854: Enum2643!
}

type Mutation {
  field23424(arg29: Int!, arg1908: Enum2639!, arg20: Input4810!): Type10630!
  field23425(arg23: ID!, arg20: Input4811!): Type10631!
  field23426(arg1909: ID!, arg1910: ID!): Type10632!
  field23427(arg20: Input4815!): Type10640! @experimental
  field23428(arg23: ID!, arg20: Input4818!): Type10640! @experimental
  field23429(arg20: Input4816!): Type10642! @experimental
  field23430(arg1911: ID!, arg745: ID!, arg746: Enum2643!): Type10640! @experimental
  field23431(arg20: Input4823!): Type10648! @experimental
  field23432(arg747: ID!): Boolean! @experimental
}