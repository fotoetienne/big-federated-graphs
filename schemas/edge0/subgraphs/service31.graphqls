type Mutation @extends {
  field390(arg1: Input55!): Type164!
}

type Type122 {
  field269: String
  field270: Boolean!
  field271: Boolean!
  field272: String
}

type Query @extends {
  field391(arg33: ID!): Type168
  field392(arg1: Input48!): Type169!
}

type Type164 {
  field275: Type168
}

type Type165 {
  field393: String!
}

type Type166 {
  field36: [Type167!]
  field37: Type122!
}

type Type167 {
  field41: String
  field40: Type165!
}

type Type168 {
  field252: Float!
  field253: String
  field394: Type166!
  field254: ID
  field255: ID!
  field256: String!
  field257: String!
  field258: ID
  field259: ID!
  field260: Enum35!
  field44: String
}

type Type169 {
  field36: [Type170!]
  field37: Type122!
}

type Type170 {
  field41: String
  field40: Type168!
}

enum Enum35 {
  VALUE_199
  VALUE_151
  VALUE_158
  VALUE_152
  VALUE_149
}

input Input48 {
  inputField106: String!
  inputField107: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField109: String
  "This is an anonymized description"
  inputField110: Int!
  "This is an anonymized description"
  inputField111: Int!
  "This is an anonymized description"
  inputField112: Int!
}

input Input55 {
  inputField113: String
  inputField103: String
  inputField104: String
  inputField114: String
  inputField128: Input57!
  inputField116: Input50
  inputField118: String
  inputField119: String
}

input Input56 {
  inputField7: String!
  inputField8: String
}

input Input57 {
  inputField50: Input56!
}
