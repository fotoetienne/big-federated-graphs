type Query @extends {
  field697(arg57: [Input58!]): [Type182!]
}

input Input58 {
  inputField136: ID!
  inputField137: ID!
}

type Type168 {
  field3: Scalar13!
  field698: Enum553!
  field55: Scalar15
  field699: Boolean
  field700: Boolean
  field701: Boolean
}

type Type169 {
  field3: Scalar13!
  field699: Boolean
  field700: Boolean
  field701: Boolean
}

union Union6 = Type168 | Type169

type Type170 {
  field3: Scalar13!
  field698: Enum553!
  field55: Scalar15
  field701: Boolean
}

type Type171 {
  field3: Scalar13!
  field701: Boolean
}

type Type172 {
  field702: Boolean
}

union Union7 = Type170 | Type171 | Type172

type Type173 {
  field703: Boolean!
  field704: [Enum553!]
  field705: Boolean!
  field706: [Enum553!]
}

type Type174 {
  field707: Scalar14!
  field3: Union6!
  field415: [Enum553!] @deprecated(reason: "Anonymized deprecation reason")
  field708: [Type177!] @deprecated(reason: "Anonymized deprecation reason")
  field709: Type173! @deprecated(reason: "Anonymized deprecation reason")
  field710: Type176!
  field711: Type176!
}

type Type175 {
  field707: Scalar14!
  field3: Union7!
  field710: Type176!
  field711: Type176!
}

type Type176 {
  field415: [Enum553!]
  field709: Type173!
  field708: [Type177!]
}

type Type177 {
  field712: String!
  field415: [Enum553!]
}

interface Interface28 {
  field713: Type174
  field714: Type174
  field715: Type175
}

type Type178 implements Interface28 {
  field716: [Type179!]
  field713: Type174
  field714: Type174
  field715: Type175
}

type Type179 implements Interface28 {
  field717: Type185!
  field713: Type174
  field714: Type174
  field715: Type175
}

type Type180 implements Interface28 {
  field713: Type174
  field714: Type174
  field715: Type175
}

type Type181 {
  field718: Type178
  field719: Type178
  field720: Type178
  field721: Type178
  field722: Type178
  field723: Type178
}

type Type182 @key(fields: "field724 field102") {
  field724: ID!
  field102: ID!
  field717: Type185!
  field725: Type183!
}

type Type183 {
  field718: Type180
  field719: Type180
  field720: Type180
  field721: Type180
  field722: Type180
  field723: Type180
}

"""
This is an anonymized description
"""
type Type29 @extends @key(fields: "field109") {
  field109: Int! @external
  """
  This is an anonymized description
  """
  field726: Type181 @directive4
}

interface Interface29 {
  field726: Type181
}

extend interface Interface26 @extends {
  field2: ID! @external
}

type Type136 implements Interface29 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field726: Type181
}

type Type138 implements Interface29 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field726: Type181
}

type Type139 implements Interface29 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field726: Type181
}

type Type137 implements Interface29 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field726: Type181
}

type Type140 implements Interface29 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field726: Type181
}

"""
This is an anonymized description
"""
type Type184 @extends @key(fields: "field2") {
  field2: Int! @external
}

"""
This is an anonymized description
"""
type Type185 @key(fields: "field727 { field2 } field108 { field109 }") @extends {
  field727: Type184 @external
  field108: Type29 @external
}