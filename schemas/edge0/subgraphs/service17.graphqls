type Query @extends {
  field684(arg57: [Input58!]): [Type182!]
}

input Input58 {
  inputField136: ID!
  inputField137: ID!
}

type Type168 {
  field3: Scalar13!
  field685: Enum550!
  field55: Scalar15
  field686: Boolean
  field687: Boolean
  field688: Boolean
}

type Type169 {
  field3: Scalar13!
  field686: Boolean
  field687: Boolean
  field688: Boolean
}

union Union6 = Type168 | Type169

type Type170 {
  field3: Scalar13!
  field685: Enum550!
  field55: Scalar15
  field688: Boolean
}

type Type171 {
  field3: Scalar13!
  field688: Boolean
}

type Type172 {
  field689: Boolean
}

union Union7 = Type170 | Type171 | Type172

type Type173 {
  field690: Boolean!
  field691: [Enum550!]
  field692: Boolean!
  field693: [Enum550!]
}

type Type174 {
  field694: Scalar14!
  field3: Union6!
  field402: [Enum550!] @deprecated(reason: "Anonymized deprecation reason")
  field695: [Type177!] @deprecated(reason: "Anonymized deprecation reason")
  field696: Type173! @deprecated(reason: "Anonymized deprecation reason")
  field697: Type176!
  field698: Type176!
}

type Type175 {
  field694: Scalar14!
  field3: Union7!
  field697: Type176!
  field698: Type176!
}

type Type176 {
  field402: [Enum550!]
  field696: Type173!
  field695: [Type177!]
}

type Type177 {
  field699: String!
  field402: [Enum550!]
}

interface Interface28 {
  field700: Type174
  field701: Type174
  field702: Type175
}

type Type178 implements Interface28 {
  field703: [Type179!]
  field700: Type174
  field701: Type174
  field702: Type175
}

type Type179 implements Interface28 {
  field704: Type185!
  field700: Type174
  field701: Type174
  field702: Type175
}

type Type180 implements Interface28 {
  field700: Type174
  field701: Type174
  field702: Type175
}

type Type181 {
  field705: Type178
  field706: Type178
  field707: Type178
  field708: Type178
  field709: Type178
  field710: Type178
}

type Type182 @key(fields: "field711 field102") {
  field711: ID!
  field102: ID!
  field704: Type185!
  field712: Type183!
}

type Type183 {
  field705: Type180
  field706: Type180
  field707: Type180
  field708: Type180
  field709: Type180
  field710: Type180
}

"""
This is an anonymized description
"""
type Type29 @extends @key(fields: "field109") {
  field109: Int! @external
  """
  This is an anonymized description
  """
  field713: Type181 @directive4
}

interface Interface29 {
  field713: Type181
}

extend interface Interface26 @extends {
  field2: ID! @external
}

type Type136 implements Interface29 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field713: Type181
}

type Type138 implements Interface29 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field713: Type181
}

type Type139 implements Interface29 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field713: Type181
}

type Type137 implements Interface29 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field713: Type181
}

type Type140 implements Interface29 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field713: Type181
}

"""
This is an anonymized description
"""
type Type184 @extends @key(fields: "field2") {
  field2: Int! @external
}

"""
This is an anonymized description
"""
type Type185 @key(fields: "field714 { field2 } field108 { field109 }") @extends {
  field714: Type184 @external
  field108: Type29 @external
}