type Type4068 {
  field2: String!
}

type Type4069 {
  field554: Float!
  field3673: Float
  field3674: Float
  field3675: ID
  field556: ID!
  field3677: ID!
  field7346: Type4068!
  field7347: String!
}

type Type4070 {
  field176: [Type4071!]
  field366: Type119!
}

type Type4071 {
  field369: String
  field177: Type4069!
}

type Type4072 {
  field11: String!
  field177: Type4068!
}

type Type4073 {
  field1775: [Type4072!]!
}

type Type4074 {
  field176: [Type4075!]
  field366: Type119!
}

type Type4075 {
  field369: String
  field177: Type4073!
}

type Type4076 {
  field554: Float!
  field198: String
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field7348: Type4074!
  field7349: Type4070!
  field100: Enum787!
  field58: String
}

type Type4077 {
  field176: [Type4078!]
  field366: Type119!
}

type Type4078 {
  field369: String
  field177: Type4076!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field7478(arg49: ID!): Type4076
  field7479(arg20: Input48!): Type4077!
}

enum Enum787 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}