type Type4072 {
  field2: String!
}

type Type4073 {
  field567: Float!
  field3691: Float
  field3692: Float
  field3693: ID
  field569: ID!
  field3695: ID!
  field7364: Type4072!
  field7365: String!
}

type Type4074 {
  field177: [Type4075!]
  field379: Type119!
}

type Type4075 {
  field382: String
  field178: Type4073!
}

type Type4076 {
  field11: String!
  field178: Type4072!
}

type Type4077 {
  field1789: [Type4076!]!
}

type Type4078 {
  field177: [Type4079!]
  field379: Type119!
}

type Type4079 {
  field382: String
  field178: Type4077!
}

type Type4080 {
  field567: Float!
  field200: String
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field7366: Type4078!
  field7367: Type4074!
  field100: Enum790!
  field58: String
}

type Type4081 {
  field177: [Type4082!]
  field379: Type119!
}

type Type4082 {
  field382: String
  field178: Type4080!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field7496(arg49: ID!): Type4080
  field7497(arg20: Input48!): Type4081!
}

enum Enum790 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}