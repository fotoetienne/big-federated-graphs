type Mutation {
  field15129: Type6997
  field15130(arg20: Input2957): Type6999
  field15131: Type6999
}

extend type Subscription {
  field15132(arg1408: ID!): [Union214]
}

type Type6997 {
  field2: ID
  field11: String
}

union Union214 = Type6998

type Type6998 {
  field405: String!
  field15133: ID!
}

type Type6999 {
  field21: Enum1669
}

enum Enum1669 {
  VALUE_1011
  VALUE_165
}

input Input2957 {
  inputField5415: ID!
  inputField5008: ID!
  inputField266: String!
}

type Query @extends {
  """
  This is an anonymized description
  """
  field15134(
  arg74: String = "default"): String @experimental
  """
  This is an anonymized description
  """
  field14566: String @experimental
  """
  This is an anonymized description
  """
  field15135(
  arg6: String!
  arg663: String
  arg1409: String
  arg1410: String
  arg523: String
  arg24: String
  arg26: Int = 0): [Type7001] @experimental
  field15136(arg1411: Int): [Type7000] @experimental
}

type Type7000 {
  field15136(arg1411: Int): [Type7000] @experimental
  field15137(arg115: String = "default"): String @experimental
}

type Type7001 {
  field631: String
  field198: String
  field152: String
  field5343: String @deprecated
  field2732: String
  field212: String
  field235: String @deprecated
  field7066: String @deprecated
  field15138: String
  field6103: String
  field427: Type7002
}

type Type7002 {
  field2: ID
  field11: String
}

type Subscription {
  field15139: Type7003
}

type Type7003 {
  field6073: String
}