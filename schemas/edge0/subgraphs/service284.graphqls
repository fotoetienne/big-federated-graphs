type Mutation {
  field15153: Type7003
  field15154(arg20: Input2959): Type7005
  field15155: Type7005
}

extend type Subscription {
  field15156(arg1408: ID!): [Union214]
}

type Type7003 {
  field2: ID
  field11: String
}

union Union214 = Type7004

type Type7004 {
  field418: String!
  field15157: ID!
}

type Type7005 {
  field21: Enum1672
}

enum Enum1672 {
  VALUE_1013
  VALUE_165
}

input Input2959 {
  inputField5419: ID!
  inputField5012: ID!
  inputField266: String!
}

type Query @extends {
  """
  This is an anonymized description
  """
  field15158(
  arg74: String = "default"): String @experimental
  """
  This is an anonymized description
  """
  field14590: String @experimental
  """
  This is an anonymized description
  """
  field15159(
  arg6: String!
  arg663: String
  arg1409: String
  arg1410: String
  arg523: String
  arg24: String
  arg26: Int = 0): [Type7007] @experimental
  field15160(arg1411: Int): [Type7006] @experimental
}

type Type7006 {
  field15160(arg1411: Int): [Type7006] @experimental
  field15161(arg115: String = "default"): String @experimental
}

type Type7007 {
  field644: String
  field200: String
  field152: String
  field5361: String @deprecated
  field2746: String
  field216: String
  field239: String @deprecated
  field7084: String @deprecated
  field15162: String
  field6121: String
  field440: Type7008
}

type Type7008 {
  field2: ID
  field11: String
}

type Subscription {
  field15163: Type7009
}

type Type7009 {
  field6091: String
}