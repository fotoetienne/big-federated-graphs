type Type29 @key(fields: "field109") @extends {
  field109: Int! @external
}

type Type30 @key(fields: "field2") @extends {
  field2: ID! @external
}

type Type31 @key(fields: "field435 { field2 field58 }") @extends {
  field435: Type32 @external
}

type Type32 @key(fields: "field2 field58") @extends {
  field2: String! @external
  field58: String @external
}

scalar Scalar3

input Input21 {
  inputField44: Input22!
}

input Input22 {
  inputField45: Enum11
  inputField46: [Input23!]
  inputField47: [Input25!]
  inputField48: [Input24!]
  inputField49: [Input22!]
}

input Input23 {
  inputField50: Enum13!
  inputField51: String!
  inputField52: Enum14
  inputField53: Input26
  inputField54: Scalar7
  inputField55: String
  inputField56: Input39
}

input Input24 {
  inputField50: Enum13!
  inputField57: String!
  inputField53: Input26
  inputField55: String
}

input Input25 {
  inputField50: Enum13!
  inputField58: [Float!]!
  inputField53: Input26
  inputField55: String
}

input Input26 {
  inputField45: Enum11
  inputField59: [Input27!]
}

input Input27 {
  inputField60: String!
  inputField61: Enum12!
  inputField62: Scalar3!
  inputField56: Input39
}

input Input28 {
  inputField63: [Input29!]
}

input Input29 {
  inputField64: String!
  inputField65: Enum10 = VALUE_16
}

enum Enum10 {
  VALUE_15
  VALUE_16
}

input Input30 {
  inputField66: Int!
  inputField63: [String!]
}

enum Enum11 {
  VALUE_35
  VALUE_36
}

enum Enum12 {
  VALUE_37
  VALUE_38
  VALUE_39
  VALUE_40
  VALUE_41
  VALUE_42
  VALUE_43
  VALUE_44
}

enum Enum13 {
  VALUE_45
  VALUE_46
  VALUE_47
  VALUE_48
  VALUE_49
  VALUE_50
  VALUE_51
  VALUE_52
  VALUE_53
  VALUE_54
  VALUE_55
  VALUE_56
  VALUE_57
  VALUE_58
  VALUE_59
  VALUE_60
  VALUE_61
  VALUE_62
  VALUE_63
  VALUE_64
  VALUE_65
  VALUE_66
  VALUE_67
  VALUE_68
  VALUE_69
  VALUE_70
  VALUE_71
  VALUE_72
  VALUE_73
  VALUE_74
  VALUE_75
  VALUE_76
  VALUE_77
  VALUE_78
  VALUE_79
  VALUE_80
  VALUE_81
  VALUE_82
  VALUE_83
  VALUE_84
  VALUE_85
  VALUE_86
  VALUE_87
  VALUE_88
  VALUE_89
  VALUE_90
  VALUE_91
  VALUE_92
  VALUE_93
  VALUE_94
  VALUE_95
  VALUE_96
  VALUE_97
  VALUE_98
  VALUE_99
  VALUE_100
  VALUE_101
  VALUE_102
  VALUE_103
  VALUE_104
  VALUE_105
  VALUE_106
  VALUE_107
  VALUE_108
  VALUE_109
  VALUE_110
  VALUE_111
  VALUE_112
  VALUE_113
  VALUE_114
  VALUE_115
  VALUE_116
  VALUE_117
  VALUE_118
  VALUE_119
  VALUE_120
  VALUE_121
  VALUE_122
}

input Input31 {
  inputField63: [Input32!]
}

input Input32 {
  inputField64: String!
  inputField62: Scalar3!
}

enum Enum14 {
  VALUE_123
  VALUE_124
  VALUE_125
  VALUE_126
  VALUE_127
  VALUE_128
  VALUE_129
  VALUE_130
  VALUE_131
  VALUE_132
  VALUE_133
  VALUE_134
  VALUE_135
  VALUE_136
  VALUE_137
  VALUE_138
  VALUE_139
  VALUE_140
  VALUE_141
  VALUE_142
  VALUE_143
  VALUE_144
  VALUE_145
  VALUE_146
  VALUE_147
  VALUE_148
  VALUE_149
  VALUE_150
  VALUE_151
  VALUE_152
  VALUE_153
}

input Input33 {
  inputField67: String!
  inputField68: String!
  inputField17: Int!
}

type Type33 {
  field436: String!
  field437: String!
  field58: Int!
}

enum Enum15 {
  VALUE_154
  VALUE_155
  VALUE_156
  VALUE_157
}

input Input34 {
  inputField69: Scalar3
  inputField70: Scalar3
  inputField71: Scalar3
}

type Type34 {
  field438: Type33!
  field439: [Type35!]
}

type Type35 {
  field440: Enum16!
  field441: String!
  field442: String
}

enum Enum16 {
  VALUE_154
  VALUE_158
  VALUE_159
  VALUE_160
}

input Input35 {
  inputField72: [Input33!]
  inputField53: Input26
}

input Input36 {
  inputField70: Scalar3!
}

input Input37 {
  inputField50: Enum13
  inputField73: [Input32!]!
  inputField74: String!
  inputField75: Input31
  inputField76: Boolean
}

input Input38 {
  inputField77: String!
  inputField78: String
}

input Input39 {
  inputField79: Boolean
  inputField80: Boolean
  inputField81: Boolean
  inputField82: Boolean
}

scalar Scalar1

scalar Scalar4

type Type36 {
  field379: Type119!
  field177: [Type37!]
  field380: Scalar1
  field443: [Type44!]
  field444: Enum17
}

type Type37 {
  field382: String
  field178: Union1!
}

union Union1 = Type39 | Type42 | Type43

type Type38 {
  field438: Type33
  field132: String!
  field271: Scalar14!
  field445: Enum15!
  field446: Scalar3
}

type Type39 {
  field108: Type29
  field447: Type30
  field448: [Union4!]
  field449: Float
  field450: [Type40!]
  field443: [Type44!]
  field451: [Type38!]
  field452: Type31
}

type Type40 {
  field453: Enum13!
  field454: [Type41!]
}

type Type41 {
  field11: String!
  field455: [Union3!]
  field449: Float
}

union Union2 = Type42 | Type39 | Type43

type Type42 {
  field441: Type44!
  field169: [Union2!]
  field456: Boolean
  field380: Scalar1
}

type Type43 {
  field457: Type44
  field458: [Union2!]
  field449: Float
}

type Type44 {
  field11: String!
  field36: Union3!
}

union Union3 = Type46 | Type47 | Type48 | Type49 | Type45 | Type54 | Type55

type Type45 {
  field459: [Union3!]!
}

type Type46 {
  field36: Int @deprecated
  field460: Int
}

type Type47 {
  field36: Float @deprecated
  field461: Float
}

type Type48 {
  field36: String @deprecated
  field462: String
}

type Type49 {
  field36: Boolean @deprecated
  field463: Boolean
}

union Union4 = Type50 | Type51

type Type50 {
  field464: Scalar1
  field465: Scalar1
}

type Type51 {
  field466: Scalar1
  field467: Scalar1
  field468: Scalar1
  field469: Scalar1
}

type Type52 {
  field470: [Type53!]
}

type Type53 {
  field453: Enum13!
  field471: [Enum14!]
}

type Type54 {
  field472: Float
  field473: Float
  field474: Float
}

type Type55 {
  field475: Type54
  field476: Type54
}

type Type56 {
  field21: Enum17!
  field446: Scalar4
}

enum Enum17 {
  VALUE_161
  VALUE_162
  VALUE_163
  VALUE_154
}

type Type57 {
  field21: Enum18
  field477: String
  field478: String
  field479: Type58
}

enum Enum18 {
  VALUE_162
  VALUE_164
  VALUE_165
  VALUE_154
}

type Type58 {
  field453: Enum13
  field480: [Type44!]!
  field132: String!
  field443: [Type44!]
}

type Query @extends {
  """
  This is an anonymized description
  """
  field481(
  arg6: Input21
  arg33: Input26
  arg34: Input28
  arg35: Input30
  arg26: Int
  arg25: String
  arg36: Input31
  arg37: Input35
  arg38: Input38
  arg39: Boolean): Type36!
  """
  This is an anonymized description
  """
  field482(
  arg40: Enum13): Type52
  """
  This is an anonymized description
  """
  field483(
  arg41: Input33): Type34
  """
  This is an anonymized description
  """
  field484(
  arg6: Input21
  arg33: Input26
  arg34: Input28
  arg35: Input30
  arg26: Int
  arg25: String
  arg36: Input31
  arg37: Input35
  arg38: Input38
  arg39: Boolean): Type56
}

type Mutation @extends {
  """
  This is an anonymized description
  """
  field485(
  arg41: Input33!
  arg42: String!
  arg43: Enum15!
  arg44: Input34!
  arg45: Input31): Boolean!
  """
  This is an anonymized description
  """
  field486(
  arg46: [Input37!]!): [Type57]
}