type Query @extends {
  field25943: Type11966
  """
  This is an anonymized description
  """
  field25944(
  arg20: Input5381!
  arg27: String
  arg25: String
  arg26: Int = 0
  arg28: Int): Type11968
  field25945(arg26: Int = 0, arg25: String, arg28: Int, arg27: String): Type11971
}

type Mutation @extends {
  field25946(arg20: Input5380): Type11966
  field25947(arg2116: String!): Type11967
}

input Input5380 {
  inputField326: String!
  inputField5531: String!
}

type Type11966 {
  field23056: Boolean
  field25948: String
}

type Type11967 {
  field20347: String
}

input Input5381 {
  """
  This is an anonymized description
  """
  inputField59: Input5382
  """
  This is an anonymized description
  """
  inputField9013: [Enum2969!]
  """
  This is an anonymized description
  """
  inputField472: Enum2970
}

enum Enum2969 {
  VALUE_1025
  VALUE_874
  VALUE_9127
  VALUE_933
}

enum Enum2970 {
  VALUE_15
  VALUE_16
}

input Input5382 {
  """
  This is an anonymized description
  """
  inputField3580: String
  """
  This is an anonymized description
  """
  inputField1129: String
  """
  This is an anonymized description
  """
  inputField9014: [String]
  """
  This is an anonymized description
  """
  inputField9015: Boolean
}

type Type11968 {
  field380: Int
  field379: Type119!
  field177: [Type11969!]!
}

type Type11969 {
  field382: String!
  field178: Type11970!
}

type Type11970 {
  field2: ID!
  field11: String
  field2819: String
  """
  This is an anonymized description
  """
  field11125: String
  field13750: Scalar14
  field1389: Int
  field25949: String
  field25950: Boolean
}

type Type11971 {
  field380: Int
  field379: Type119!
  field177: [Type11972]
}

type Type11972 {
  field382: String!
  field178: Type11973
}

type Type11973 {
  field6460: String
  field11: String
  field1393: String
}