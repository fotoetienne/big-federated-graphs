type Query @extends {
  field25916: Type11960
  """
  This is an anonymized description
  """
  field25917(
  arg20: Input5379!
  arg27: String
  arg25: String
  arg26: Int = 0
  arg28: Int): Type11962
  field25918(arg26: Int = 0, arg25: String, arg28: Int, arg27: String): Type11965
}

type Mutation @extends {
  field25919(arg20: Input5378): Type11960
  field25920(arg2116: String!): Type11961
}

input Input5378 {
  inputField326: String!
  inputField5527: String!
}

type Type11960 {
  field23029: Boolean
  field25921: String
}

type Type11961 {
  field20322: String
}

input Input5379 {
  """
  This is an anonymized description
  """
  inputField59: Input5380
  """
  This is an anonymized description
  """
  inputField9009: [Enum2966!]
  """
  This is an anonymized description
  """
  inputField472: Enum2967
}

enum Enum2966 {
  VALUE_1023
  VALUE_872
  VALUE_9124
  VALUE_931
}

enum Enum2967 {
  VALUE_15
  VALUE_16
}

input Input5380 {
  """
  This is an anonymized description
  """
  inputField3576: String
  """
  This is an anonymized description
  """
  inputField1129: String
  """
  This is an anonymized description
  """
  inputField9010: [String]
  """
  This is an anonymized description
  """
  inputField9011: Boolean
}

type Type11962 {
  field367: Int
  field366: Type119!
  field176: [Type11963!]!
}

type Type11963 {
  field369: String!
  field177: Type11964!
}

type Type11964 {
  field2: ID!
  field11: String
  field2805: String
  """
  This is an anonymized description
  """
  field11098: String
  field13723: Scalar14
  field1375: Int
  field25922: String
  field25923: Boolean
}

type Type11965 {
  field367: Int
  field366: Type119!
  field176: [Type11966]
}

type Type11966 {
  field369: String!
  field177: Type11967
}

type Type11967 {
  field6442: String
  field11: String
  field1379: String
}