type Query @extends {
  field7776: [Type4172!]!
  field7777(arg23: ID!): Type4172
  field7778(arg29: String): [Type4180!]!
  field7779(arg29: String!): [Type4181!]!
  field7780(arg23: ID!, arg29: String!): Type4181
}

type Mutation @extends {
  field7781(arg20: Input1467!): Type4172!
  field7782(arg23: ID!, arg20: Input1470!): Type4172!
  field7783(arg20: Input1468!): Type4174!
  field7784(arg744: ID!, arg745: ID!, arg746: Enum824!): Type4172!
  field7785(arg20: Input1475!): Type4180!
  field7786(arg747: ID!): Boolean!
}

type Type4172 {
  field2: ID!
  field11: String!
  field7787: [Type4173!]!
  field7788: [Type4174!]!
  field1785: [String!]!
  field7789: [String!]!
  field332: Type26!
  field270: String!
  field7790: Type26!
  field7791: String!
}

type Type4173 {
  field7792: Enum824!
  field58: String!
}

type Type4174 {
  field2: ID!
  field7793: String!
  field58: String!
  field7794: Type4175!
  field7795: Type4176!
  field7796: Type4177!
  field332: Type26!
  field270: String!
}

type Type4175 {
  field669: [String!]!
  field200: String
  field7797: String
}

type Type4176 {
  field80: Enum825!
  field943: [String!]!
  field1924: [String!]!
}

type Type4177 {
  field80: Enum826!
  field872: Type4178
}

type Type4178 {
  field137: String!
  field11: String!
  field58: String!
}

type Type4179 {
  field2: ID!
  field1549: [String!]!
  field7798: [String!]!
}

type Type4180 {
  field2: ID!
  field109: String!
  field7793: String!
  field7799: Enum824!
}

type Type4181 {
  field2: ID!
  field11: String!
  field7794: Type4175!
  field7795: Type4176!
  field7796: Type4177!
  field7792: Enum824!
}

enum Enum824 {
  VALUE_3388
  VALUE_2524
  VALUE_3389
}

enum Enum825 {
  VALUE_3390
  VALUE_3391
  VALUE_2
}

enum Enum826 {
  VALUE_3392
}

input Input1467 {
  inputField64: String!
  inputField2844: Input1469!
}

input Input1468 {
  inputField2845: ID!
  inputField2844: Input1469!
}

input Input1469 {
  inputField2846: Input1471!
  inputField2847: Input1472!
  inputField2848: Input1473!
}

input Input1470 {
  inputField433: [String!]
  inputField2849: [String!]
  inputField2850: Enum824
}

input Input1471 {
  inputField128: [String!]!
  inputField110: String
  inputField2851: String
}

input Input1472 {
  inputField115: Enum825!
  inputField233: [String!]
  inputField95: [String!]
}

input Input1473 {
  inputField115: Enum826!
  inputField2852: String
  inputField2853: Input1474
}

input Input1474 {
  inputField596: String!
  inputField64: String!
  inputField17: String!
}

input Input1475 {
  inputField187: String!
  inputField2845: ID!
  inputField2854: Enum824!
}

type Type26 @extends @key(fields: "field132") {
  field132: ID! @external
}