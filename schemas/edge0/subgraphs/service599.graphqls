type Type3116 @key(fields: "field556") {
  field554: Float!
  field198: String
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field100: Enum3562!
  field58: String
}

type Type15043 {
  field176: [Type15044!]
  field366: Type119!
}

type Type15044 {
  field369: String
  field177: Type3116!
}

type Mutation @extends {
  field29648(arg20: Input6918!): Type15045!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field29649(arg49: ID!): Type3116
  field29650(arg20: Input48!): Type15043!
}

type Type15045 {
  field575: Type3116
}

enum Enum3562 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

enum Enum31 {
  VALUE_214
  VALUE_215
}

input Input6915 {
  inputField10214: [String!]
  inputField5807: [String!]
}

input Input6916 {
  inputField599: Input6917
}

input Input6917 {
  inputField10215: Input6915!
  inputField74: String!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input49 {
  inputField16: String!
  "This is an anonymized description"
  inputField115: Enum31!
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input6918 {
  inputField120: String
  inputField110: String
  "This is an anonymized description"
  inputField111: String
  inputField121: String
  inputField135: Input6916!
  "This is an anonymized description"
  inputField122: Input49
  "This is an anonymized description"
  inputField123: Input50
  "This is an anonymized description"
  inputField124: String
  "This is an anonymized description"
  inputField125: String
  "This is an anonymized description"
  inputField126: String
}