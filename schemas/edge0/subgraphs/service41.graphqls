type Query {
  field1066(arg97: ID!): Type387
  field1067(arg10: Input137 = {}): [Type387]
  field1068: [Type387]
}

type Mutation {
  field1069(arg98: Input138!): Type387
  field1070(arg99: Input139!): Type387
  field1071(arg100: Input140!): [Type389]
}

type Type387 {
  field2: ID
  field525: Enum115
  field341: String
  field253: String
  field1072: Scalar13
  field1073: String
  field56: String
  field748: [Type388]
  field908: [Type389]
  field1074: String
}

type Type388 {
  field2: ID
  field1075: Enum116
  field1076: Scalar13
  field57: String
  field1077: String
}

type Type389 {
  field2: ID
  field1078: String
  field87: String
  field1079: Scalar13
}

input Input137 {
  inputField314: String
  inputField123: String
}

input Input138 {
  inputField315: Enum115 = VALUE_763
  inputField123: String!
  inputField103: String
  inputField316: String
}

input Input139 {
  inputField317: ID!
  inputField318: Enum116!
  inputField319: String
}

input Input140 {
  inputField317: ID!
  inputField248: String!
}

enum Enum115 {
  VALUE_761
  VALUE_762
  VALUE_763
}

enum Enum116 {
  VALUE_764
  VALUE_765
  VALUE_766
}
