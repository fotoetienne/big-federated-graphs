type Type7026 {
  field132: String
}

type Type3095 @key(fields: "field556") {
  field554: Float!
  field198: String
  field723: Type7026
  field15162: Type26
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field100: Enum1673!
  field58: String
}

type Type7027 {
  field176: [Type7028!]
  field366: Type119!
}

type Type7028 {
  field369: String
  field177: Type3095!
}

type Mutation @extends {
  field15163(arg20: Input2976!): Type7029!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field15164(arg49: ID!): Type3095
  field15165(arg20: Input48!): Type7027!
}

type Type7029 {
  field575: Type3095
}

type Type26 @extends @key(fields: "field132") {
  field132: ID! @external
}

enum Enum1673 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

enum Enum31 {
  VALUE_214
  VALUE_215
}

input Input2975 {
  inputField74: String!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input49 {
  inputField16: String!
  "This is an anonymized description"
  inputField115: Enum31!
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input2976 {
  inputField120: String
  inputField110: String
  "This is an anonymized description"
  inputField111: String
  inputField121: String
  inputField135: Input2975!
  "This is an anonymized description"
  inputField122: Input49
  "This is an anonymized description"
  inputField123: Input50
  "This is an anonymized description"
  inputField124: String
  "This is an anonymized description"
  inputField125: String
  "This is an anonymized description"
  inputField126: String
}