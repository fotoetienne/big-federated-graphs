type Type4613 {
  field132: String
}

type Type4614 {
  field132: String
}

type Type3099 @key(fields: "field556") {
  field554: Float!
  field198: String
  field723: Type4613
  field724: Type4614
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field8660: Type26!
  field560: ID!
  field100: Enum946!
  field58: String
}

type Type4615 {
  field176: [Type4616!]
  field366: Type119!
}

type Type4616 {
  field369: String
  field177: Type3099!
}

type Mutation @extends {
  field8661(arg20: Input1642!): Type4617!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field8662(arg49: ID!): Type3099
  field8663(arg20: Input48!): Type4615!
}

type Type4617 {
  field575: Type3099
}

type Type26 @extends @key(fields: "field132") {
  field132: ID! @external
}

enum Enum946 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

enum Enum31 {
  VALUE_214
  VALUE_215
}

input Input1641 {
  inputField74: String
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input49 {
  inputField16: String!
  "This is an anonymized description"
  inputField115: Enum31!
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input1642 {
  inputField120: String
  inputField110: String
  "This is an anonymized description"
  inputField111: String
  inputField121: String
  inputField135: Input1641!
  "This is an anonymized description"
  inputField122: Input49
  "This is an anonymized description"
  inputField123: Input50
  "This is an anonymized description"
  inputField124: String
  "This is an anonymized description"
  inputField125: String
  "This is an anonymized description"
  inputField126: String
}