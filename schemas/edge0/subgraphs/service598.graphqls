type Type15040 {
  field1436: String!
  field1437: String!
  field891: String!
  field1438: [Type15041!]!
}

type Type15041 {
  field1439: String!
  field478: String!
  field1440: String!
  field684: String!
  field1441: Float!
  field1442: String
}

type Type15042 {
  field567: Float!
  field200: String
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum3564!
  field1443: Type15046!
  field58: String
}

type Type15043 {
  field177: [Type15044!]
  field379: Type119!
}

type Type15044 {
  field382: String
  field178: Type15042!
}

type Type15045 {
  field1444: [Type15040!]!
  field1445: String!
}

type Type15046 {
  field177: [Type15047!]
  field379: Type119!
}

type Type15047 {
  field382: String
  field178: Type15045!
}

type Mutation @extends {
  field29672(arg20: Input6916!): Type15048!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field29673(arg49: ID!): Type15042
  field29674(arg20: Input48!): Type15043!
}

type Type15048 {
  field588: Type15042
}

enum Enum3564 {
  VALUE_787
  VALUE_212
  VALUE_164
  VALUE_788
  VALUE_171
  VALUE_165
  VALUE_162
  VALUE_789
  VALUE_790
}

input Input6915 {
  inputField187: Int!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input6916 {
  inputField120: String
  inputField110: String
  inputField111: String
  inputField121: String
  inputField135: Input6915!
  inputField123: Input50
  inputField125: String
  inputField126: String
}