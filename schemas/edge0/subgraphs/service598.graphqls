type Type15034 {
  field1422: String!
  field1423: String!
  field877: String!
  field1424: [Type15035!]!
}

type Type15035 {
  field1425: String!
  field465: String!
  field1426: String!
  field671: String!
  field1427: Float!
  field1428: String
}

type Type15036 {
  field554: Float!
  field198: String
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field100: Enum3561!
  field1429: Type15040!
  field58: String
}

type Type15037 {
  field176: [Type15038!]
  field366: Type119!
}

type Type15038 {
  field369: String
  field177: Type15036!
}

type Type15039 {
  field1430: [Type15034!]!
  field1431: String!
}

type Type15040 {
  field176: [Type15041!]
  field366: Type119!
}

type Type15041 {
  field369: String
  field177: Type15039!
}

type Mutation @extends {
  field29645(arg20: Input6914!): Type15042!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field29646(arg49: ID!): Type15036
  field29647(arg20: Input48!): Type15037!
}

type Type15042 {
  field575: Type15036
}

enum Enum3561 {
  VALUE_785
  VALUE_212
  VALUE_164
  VALUE_786
  VALUE_171
  VALUE_165
  VALUE_162
  VALUE_787
  VALUE_788
}

input Input6913 {
  inputField187: Int!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input6914 {
  inputField120: String
  inputField110: String
  inputField111: String
  inputField121: String
  inputField135: Input6913!
  inputField123: Input50
  inputField125: String
  inputField126: String
}