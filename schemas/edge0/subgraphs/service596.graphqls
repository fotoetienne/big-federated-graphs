type Mutation @extends {
  field29636(arg20: Input6902!): Type15029!
  field29637(arg20: Input6904!): Type446!
  field29638(arg20: Input6906!): Type446!
  field29639(arg20: Input6909!): Type446!
  field29640(arg20: Input6911!): Type446!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field29641(arg49: ID!): Type15030
  field29642(arg20: Input48!): Type15031!
}

type Type446 {
  field563: String!
  field100: String!
}

type Type15029 {
  field575: Type15030
}

type Type15030 {
  field554: Float!
  field198: String
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field100: Enum3560!
  field58: String
}

type Type15031 {
  field176: [Type15032!]
  field366: Type119!
}

type Type15032 {
  field369: String
  field177: Type15030!
}

enum Enum3560 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input6902 {
  inputField120: String
  inputField110: String
  inputField111: String
  inputField121: String
  inputField123: Input50
  inputField125: String
  inputField126: String
}

input Input6903 {
  inputField16: String!
}

input Input6904 {
  inputField110: String
  inputField111: String
  inputField350: Input6905!
  inputField112: String!
}

input Input6905 {
  inputField9386: String!
  inputField992: Input6903!
  inputField9389: Input6908!
}

input Input6906 {
  inputField110: String
  inputField111: String
  inputField112: String!
}

input Input6907 {
  inputField9391: String!
  inputField9392: String
}

input Input6908 {
  inputField716: [Input6907!]!
}

input Input6909 {
  inputField110: String
  inputField111: String
  inputField350: Input6910!
  inputField112: String!
}

input Input6910 {
  inputField907: [String!]!
  inputField992: Input6903!
}

input Input6911 {
  inputField110: String
  inputField111: String
  inputField350: Input6912!
  inputField112: String!
}

input Input6912 {
  inputField700: String!
  inputField3180: Int!
}