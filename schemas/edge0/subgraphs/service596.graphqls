type Mutation @extends {
  field29663(arg20: Input6904!): Type15035!
  field29664(arg20: Input6906!): Type446!
  field29665(arg20: Input6908!): Type446!
  field29666(arg20: Input6911!): Type446!
  field29667(arg20: Input6913!): Type446!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field29668(arg49: ID!): Type15036
  field29669(arg20: Input48!): Type15037!
}

type Type446 {
  field576: String!
  field100: String!
}

type Type15035 {
  field588: Type15036
}

type Type15036 {
  field567: Float!
  field200: String
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum3563!
  field58: String
}

type Type15037 {
  field177: [Type15038!]
  field379: Type119!
}

type Type15038 {
  field382: String
  field178: Type15036!
}

enum Enum3563 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input6904 {
  inputField120: String
  inputField110: String
  inputField111: String
  inputField121: String
  inputField123: Input50
  inputField125: String
  inputField126: String
}

input Input6905 {
  inputField16: String!
}

input Input6906 {
  inputField110: String
  inputField111: String
  inputField350: Input6907!
  inputField112: String!
}

input Input6907 {
  inputField9390: String!
  inputField992: Input6905!
  inputField9393: Input6910!
}

input Input6908 {
  inputField110: String
  inputField111: String
  inputField112: String!
}

input Input6909 {
  inputField9395: String!
  inputField9396: String
}

input Input6910 {
  inputField716: [Input6909!]!
}

input Input6911 {
  inputField110: String
  inputField111: String
  inputField350: Input6912!
  inputField112: String!
}

input Input6912 {
  inputField907: [String!]!
  inputField992: Input6905!
}

input Input6913 {
  inputField110: String
  inputField111: String
  inputField350: Input6914!
  inputField112: String!
}

input Input6914 {
  inputField700: String!
  inputField3184: Int!
}