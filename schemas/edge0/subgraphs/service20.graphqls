directive @directive1(arg47: String!) on OBJECT | INPUT_OBJECT | FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @directive2 on FIELD_DEFINITION

type Mutation @directive1(arg47: "anonymous-string") {
  field760(arg20: Input85!): ID
  field761(arg61: ID!, arg20: Input84!): ID
  field762(arg61: ID!, arg20: Input74!): Type214
  field763(arg61: ID!, arg20: Input73!): Type214
  field764(arg61: ID!, arg20: [Input74!]!): Type214
  field765(arg61: ID!, arg20: Input72!): Type214
  field766(arg61: ID!, arg20: Input78!): Type214
  field767(arg61: ID!, arg20: Input79!): Type214
  field768(arg61: ID!, arg20: Input80!): Type214
  field769(arg61: ID!, arg20: Input81!): Type214
  field770(arg61: ID!, arg20: Input82!): Type214
  field771(arg61: ID!, arg20: Input83): Type214
  field772(arg62: [ID!]!): [Type214!]!
  field773(arg62: [ID!]!): [ID!]!
  field774(arg61: ID!, arg20: Input71): Type214
  field775(arg29: Int!, arg63: Enum43!, arg64: Boolean!): Type208 @directive1(arg47: "anonymous-string")
}

type Query @directive1(arg47: "anonymous-string") {
  field776(arg65: ID!, arg66: String!): Type213
  field777(arg61: ID!, arg67: Boolean! = false): Type214
  field778(arg62: [ID!]!): Type209!
  field779(arg29: Int!, arg68: Enum43!): [Type80!]!
  field780(arg29: Int!, arg68: Enum43!, arg6: String): [Type26!]! @provides(fields: "field133")
  field781(arg29: ID!): [Type220!]!
  field782(arg25: String = null, arg27: String = null, arg26: Int = null, arg28: Int = null, arg69: ID = null, arg29: Int = null, arg63: Enum43!): Type210!
  field783: Type240!
}

type Type208 {
  field784: Boolean!
  field785: Scalar4!
}

type Type209 {
  field786: [Type214!]!
}

type Type210 {
  field786: Type211!
}

type Type211 {
  field176: [Type212!]
  field366: Type119
  field126: Int
}

type Type212 {
  field369: String
  field177: Type214
}

input Input71 {
  inputField170: [ID!]!
}

input Input72 {
  inputField171: Enum57!
}

input Input73 {
  inputField16: ID!
}

input Input74 {
  inputField172: Input77
  inputField173: String
  inputField16: ID!
  inputField174: String
  inputField175: Boolean
  inputField176: String
  inputField177: String
  inputField178: Enum59
  inputField179: Input75
  inputField180: Input76
  inputField181: Enum49
}

input Input75 {
  inputField64: String!
  inputField182: String!
}

input Input76 {
  inputField16: ID!
}

input Input77 {
  inputField16: ID!
  inputField17: String!
}

input Input78 {
  "This is an anonymized description"
  inputField170: [ID!]!
}

input Input79 {
  "This is an anonymized description"
  inputField170: [ID!]!
}

input Input80 {
  "This is an anonymized description"
  inputField170: [ID!]!
}

input Input81 {
  inputField130: String
}

input Input82 {
  inputField183: [String!]!
  inputField184: [String!]!
}

input Input83 {
  "This is an anonymized description"
  inputField185: String
}

input Input84 {
  "This is an anonymized description"
  inputField186: String!
}

input Input85 {
  inputField187: Int!
  inputField188: String!
  "This is an anonymized description"
  inputField183: [String!]! = []
  "This is an anonymized description"
  inputField184: [String!]! = []
  "This is an anonymized description"
  inputField189: Input86
  "This is an anonymized description"
  inputField190: String!
  "This is an anonymized description"
  inputField115: Enum43!
}

enum Enum43 {
  VALUE_243
  VALUE_244
}

input Input86 {
  inputField191: String!
  inputField192: Enum44! = VALUE_245
  "This is an anonymized description"
  inputField193: [Input87!]!
}

input Input87 {
  inputField194: Enum47
  inputField195: Enum48!
  inputField196: Enum49
  inputField197: Int! = 0
  inputField198: Input88
  inputField199: Int
  inputField200: Enum50!
  inputField201: Enum46!
  inputField202: Input90 @experimental
}

enum Enum44 {
  VALUE_245
  VALUE_246
  VALUE_247
}

input Input88 {
  inputField203: Enum45!
  inputField204: Int!
}

enum Enum45 {
  VALUE_248
  VALUE_249
  VALUE_250
}

enum Enum46 {
  VALUE_251
  VALUE_252
  VALUE_253
  VALUE_254
  VALUE_255
  VALUE_256
  VALUE_257
  VALUE_258
  VALUE_259
  VALUE_260
  VALUE_261
  VALUE_262
  VALUE_263
  VALUE_264
}

enum Enum47 {
  VALUE_265
  VALUE_266
  VALUE_267
  VALUE_268
}

enum Enum48 {
  VALUE_269
  VALUE_270
}

enum Enum49 {
  VALUE_271
  VALUE_272
  VALUE_273
  VALUE_274
}

enum Enum50 {
  VALUE_251
  VALUE_253
  VALUE_254
  VALUE_2
  VALUE_256
  VALUE_257
  VALUE_258
  VALUE_259
  VALUE_260
  VALUE_261
  VALUE_262
  VALUE_263
  VALUE_264
}

type Type213 {
  field787: Enum51!
  field788: Int
}

enum Enum51 {
  VALUE_275
  VALUE_276
  VALUE_277
  VALUE_278
}

type Type214 @key(fields: "field2") {
  field2: ID!
  field108: Type29!
  field789: String!
  field790: [Type219!]
  field791: Type221!
  field265: Scalar14!
  field792: Scalar14
  field793: Type223!
  field11: String!
  field80: Enum43!
  field794: Int!
  field795: Type26! @provides(fields: "field133")
  field796: Type218!
  field797: [Type226!]!
  field798: [Type226!]!
  field799: [Type80!]
  field800: [Type26!]!
  field21: Enum52
  field801: Scalar14
  field802: String
  field803: Type215!
  field111: Type244!
}

type Type215 {
  field804: String!
  field805: Enum44!
  field806: [Type216!]!
}

type Type216 {
  field807: Enum48!
  field808: Enum47
  field809: Enum46!
  field810: Int!
  field453: Type217
  field811: Int
  field812: Enum50!
  field813: Enum49
  field814: Type242 @experimental
}

type Type217 {
  field815: Enum45!
  field816: Int!
}

enum Enum52 {
  VALUE_279
  VALUE_164
  VALUE_165
  VALUE_162
  VALUE_280
  VALUE_281
  VALUE_282
  VALUE_283
  VALUE_284
  VALUE_285
}

type Type218 {
  field817: Int!
  field818: Int!
  field819: Int!
  field48: String!
  field820: Int!
}

type Type219 {
  field11: String!
}

type Type220 @directive1(arg47: "anonymous-string") {
  field11: String!
  field109: String!
}

type Type221 {
  field821: String!
  field822: String
  field823: String!
  field824: Scalar1
}

type Type222 {
  field825: Boolean
  field245: Scalar4
  field11: Enum57!
  field826: Enum56!
}

type Type223 {
  field827: [Type222!]
  field797: [Type225!]
}

type Type224 {
  field245: Scalar4
  field11: Enum55!
  field826: Enum56!
}

type Type225 {
  field793: [Type224!]
  field828: ID!
}

type Type226 {
  field2: ID!
  field829: Type232
  field830: Type230
  field831: String
  field832: String
  field833: String @deprecated(reason: "Anonymized deprecation reason")
  field806: [Type227!]
  field834: String
  field835: Type229!
  field21: Enum54
  field836: Type233!
  field837: Enum60
  field838: Type234
}

type Type227 {
  field833: String!
  field839: Type228
}

type Type228 {
  field840: Int
}

type Type229 {
  field215: String!
  field237: String!
  field233: String!
  field841: Int
}

type Type230 {
  field842: String
  field843: String
  field844: String
  field845: String
  field11: String!
  field846: String
  field847: Type231
}

type Type231 {
  field668: Int!
  field395: Int!
}

type Type232 {
  field427: Enum58!
  field848: Scalar4!
}

type Type233 {
  field849: Type238
  field850: Type238
  field851: Boolean
  field427: Enum53
}

type Type234 {
  field852: Type235
  field853: Type235
}

type Type235 {
  field854: Type236
  field855: [Type236]
  field856: Float
}

type Type236 {
  field668: String
  field395: String
}

enum Enum53 {
  VALUE_286
  VALUE_287
  VALUE_288
}

type Type237 {
  field11: String!
  field857: String!
}

type Type238 {
  field11: String!
  field858: Type239!
}

type Type239 {
  field857: String
  field859: String
}

enum Enum54 {
  VALUE_279
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
  VALUE_283
  VALUE_284
}

enum Enum55 {
  VALUE_289
  VALUE_290
  VALUE_291
  VALUE_292
  VALUE_293
  VALUE_294
  VALUE_295
  VALUE_296
  VALUE_297
  VALUE_298
  VALUE_299
  VALUE_300
}

enum Enum56 {
  VALUE_301
  VALUE_302
}

enum Enum57 {
  VALUE_289
  VALUE_303
  VALUE_296
}

enum Enum58 {
  VALUE_304
  VALUE_305
  VALUE_306
}

enum Enum59 {
  VALUE_307
  VALUE_308
}

enum Enum60 {
  VALUE_309
  VALUE_310
  VALUE_311
  VALUE_312
  VALUE_313
}

type Type26 @extends @key(fields: "field132") {
  field132: ID! @external
  field133: String @external
}

type Type80 @extends @key(fields: "field2") {
  field2: ID! @external
}

type Type29 @extends @key(fields: "field109") {
  field109: Int! @external
}

type Type240 {
  field860: [Type241!]!
}

type Type241 {
  field11: String!
  field857: String!
}

scalar Scalar4

scalar Scalar1

input Input89 {
  inputField205: Int!
  inputField206: Int!
}

enum Enum61 {
  VALUE_314
  VALUE_315
  VALUE_316
}

enum Enum62 {
  VALUE_317
  VALUE_318
  VALUE_319
  VALUE_320
}

enum Enum63 {
  VALUE_317
  VALUE_318
  VALUE_319
  VALUE_320
}

input Input90 {
  inputField207: Input89!
  inputField208: Input89
  inputField209: Boolean!
  inputField210: Float!
  inputField211: Enum61!
  inputField212: Enum63!
  inputField213: Enum63!
}

type Type242 {
  field861: Type243!
  field862: Type243
  field863: Boolean!
  field864: Float!
  field865: Enum61!
  field866: Enum63!
  field427: Enum63!
}

type Type243 {
  field668: Int!
  field395: Int!
}

type Type31 @extends @key(fields: "field422 { field2 field58 }") {
  field422: Type32! @external
}

type Type32 @extends @key(fields: "field2 field58") {
  field2: String! @external
  field58: String! @external
}

type Type244 {
  field867: Type31
}