"""
This is an anonymized description
"""
type Query @extends {
  field5615(arg1: Input999!): Type3261!
  field5616(arg1: Input1000!): Type3263!
  field5617(arg1: Input1004!): Type3264!
  field5618(arg1: Input1001!): Type3262!
}

input Input999 {
  inputField171: ID!
  inputField583: String!
  inputField2072: String!
  inputField108: String
  inputField2073: ID
  inputField2074: Enum592
  inputField2075: Float
  inputField2076: [String!]
  inputField2077: [ID!]
}

type Type3261 {
  field5619: String!
  field1416: String!
  field524: String
  field285: String
  field5620: String!
}

type Type3262 {
  field5619: [String!]!
}

input Input1000 {
  inputField583: String!
  inputField2072: String!
  inputField244: String
  inputField2074: Enum592
  inputField2075: Float
}

input Input1001 {
  inputField2074: String!
  inputField2078: [Input1002!]!
}

enum Enum590 {
  VALUE_145
  VALUE_2468
}

input Input1002 {
  inputField912: Enum590!
  inputField2079: [Input1003!]!
}

enum Enum591 {
  VALUE_763
  VALUE_761
  VALUE_1029
}

input Input1003 {
  inputField108: String!
  inputField44: String
  inputField2080: String
  inputField809: String
  inputField2081: Enum591
}

type Type3263 {
  field5619: String!
  field894: String!
  field5620: String!
}

input Input1004 {
  inputField44: String!
  inputField2082: String!
  inputField2083: String!
  inputField218: [ID!]
  inputField2084: String
}

type Type3264 {
  field5619: String!
}

enum Enum592 {
  VALUE_2548
  VALUE_2549
  VALUE_2550
  VALUE_2551
  VALUE_2552
}
