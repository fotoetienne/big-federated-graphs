type Type7790 {
  field252: Float!
  field253: String
  field254: ID
  field255: ID!
  field256: String!
  field257: String!
  field258: ID
  field259: ID!
  field260: Enum1824!
  field44: String
}

type Type7791 {
  field36: [Type7792!]
  field37: Type122!
}

type Type7792 {
  field41: String
  field40: Type7790!
}

type Mutation @extends {
  field16092(arg1: Input3501!): Type7793!
}

type Type122 {
  field269: String
  field270: Boolean!
  field271: Boolean!
  field272: String
}

type Query @extends {
  field16093(arg33: ID!): Type7790
  field16094(arg1: Input48!): Type7791!
}

type Type7793 {
  field275: Type7790
}

enum Enum1824 {
  VALUE_199
  VALUE_151
  VALUE_158
  VALUE_152
  VALUE_149
}

input Input3499 {
  inputField579: Input3500
}

input Input3500 {
  inputField57: String
}

input Input48 {
  inputField106: String!
  inputField107: Boolean! = false
}

input Input50 {
  "This is an anonymized description"
  inputField109: String
  "This is an anonymized description"
  inputField110: Int!
  "This is an anonymized description"
  inputField111: Int!
  "This is an anonymized description"
  inputField112: Int!
}

input Input3501 {
  inputField113: String
  inputField103: String
  inputField104: String
  inputField114: String
  inputField128: Input3499!
  inputField116: Input50
  inputField118: String
  inputField119: String
}
