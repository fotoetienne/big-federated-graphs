type Type2001 @key(fields: "field2") {
  field2: ID!
  field11: String!
}

type Type2002 @key(fields: "field2") {
  field2: ID!
  field11: String!
  field28725: String!
  field28726: Type2001!
}

input Input6590 {
  inputField9879: String
}

type Query @extends {
  field28727: [Type2001!]!
  field28728(arg20: Input6590!): [Type2002!]!
}

input Input6591 {
  inputField64: String!
  inputField9879: String!
  inputField9880: String!
}

input Input6592 {
  inputField1075: [Input6591!]!
}

input Input6593 {
  inputField16: ID!
  inputField64: String!
  inputField9879: String!
  inputField9880: String!
}

type Type14566 {
  field28729: [Type2002!]!
}

type Type14567 {
  field730: String!
}

union Union783 = Type2002 | Type14567

union Union784 = Type14566 | Type14567

type Mutation @extends {
  field28730(arg20: Input6591!): Union783!
  field28731(arg20: Input6592!): Union784!
  field28732(arg20: Input6593!): Union783!
}