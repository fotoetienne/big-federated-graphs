type Type10798 {
  field3431: String
  field133: String
  field3430: String
}

type Type10799 {
  field11: Type10798!
}

type Type10800 {
  field563: String!
  field564: Type10799
  field100: String!
}

type Type10801 {
  field554: Float!
  field198: String
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field100: Enum2677!
  field58: String
}

type Type10802 {
  field176: [Type10803!]
  field366: Type119!
}

type Type10803 {
  field369: String
  field177: Type10801!
}

type Mutation @extends {
  field23638(arg20: Input4895!): Type10800!
  field23639(arg20: Input4895!): Type446!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field23640(arg49: ID!): Type10801
  field23641(arg20: Input48!): Type10802!
}

type Type446 {
  field563: String!
  field100: String!
}

enum Enum2677 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input4895 {
  inputField110: String
  inputField111: String
  inputField350: Input4896!
  inputField112: String!
}

input Input4896 {
  inputField8499: Boolean!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}