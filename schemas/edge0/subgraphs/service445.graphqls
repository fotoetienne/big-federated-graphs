type Type10804 {
  field3449: String
  field133: String
  field3448: String
}

type Type10805 {
  field11: Type10804!
}

type Type10806 {
  field576: String!
  field577: Type10805
  field100: String!
}

type Type10807 {
  field567: Float!
  field200: String
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum2680!
  field58: String
}

type Type10808 {
  field177: [Type10809!]
  field379: Type119!
}

type Type10809 {
  field382: String
  field178: Type10807!
}

type Mutation @extends {
  field23665(arg20: Input4897!): Type10806!
  field23666(arg20: Input4897!): Type446!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field23667(arg49: ID!): Type10807
  field23668(arg20: Input48!): Type10808!
}

type Type446 {
  field576: String!
  field100: String!
}

enum Enum2680 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

input Input4897 {
  inputField110: String
  inputField111: String
  inputField350: Input4898!
  inputField112: String!
}

input Input4898 {
  inputField8503: Boolean!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}