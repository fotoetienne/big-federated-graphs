type Query @extends {
  field15165(arg29: ID!): Type29
}

type Mutation @extends {
  field15166(arg29: ID!, arg1412: Input2973): Type3204!
  field15167(arg20: Input2974!): Type3206
  field15168(arg20: [Input2974!]!): [Type3206]
}

input Input2960 {
  inputField823: Scalar13!
  inputField2355: Enum553!
  inputField1509: Scalar15
}

input Input2961 {
  inputField5420: Int!
}

enum Enum1673 {
  VALUE_1148
  VALUE_5711
  VALUE_5712
}

input Input2962 {
  inputField5421: Enum1673!
  inputField837: Input2961
  inputField5422: Input2960
}

input Input2963 {
  inputField582: Input2962!
  inputField620: [Enum553!]!
}

input Input2964 {
  inputField5300: Input2962!
  inputField1737: [Input2963!]
}

input Input2965 {
  inputField2361: Boolean
  inputField4094: Boolean
  inputField1505: Boolean
  inputField5423: Boolean
}

input Input2966 {
  inputField2361: Boolean
  inputField5423: Boolean
  inputField1505: Boolean
  inputField2625: Boolean
}

input Input2967 {
  inputField2361: Boolean
  inputField5423: Boolean
  inputField1505: Boolean
  inputField2625: Boolean
}

input Input2968 {
  inputField130: Boolean
  inputField2361: Boolean
  inputField5423: Boolean
  inputField2625: Boolean
}

input Input2969 {
  inputField2361: Boolean
  inputField4094: Boolean
  inputField5423: Boolean
  inputField1505: Boolean
  inputField2625: Boolean
}

input Input2970 {
  inputField2361: Boolean
  inputField4094: Boolean
  inputField5423: Boolean
  inputField1505: Boolean
  inputField2625: Boolean
}

input Input2971 {
  inputField130: Boolean
  inputField2361: Boolean
  inputField4094: Boolean
  inputField5423: Boolean
  inputField1505: Boolean
  inputField2625: Boolean
}

input Input2972 {
  inputField5424: Boolean
  inputField5425: Input2965
  inputField5426: Input2966
  inputField5427: Input2968
  inputField5428: Input2969
  inputField5429: Input2970
  inputField5430: Input2967
  inputField5431: Input2971
}

input Input2973 {
  inputField5432: Input2964
  inputField5433: Input2972
}

type Type7010 {
  field3: Scalar13!
  field698: Enum553!
  field55: Scalar15
}

type Type7011 {
  field245: Int
}

union Union215 = Type7010 | Type7011

type Type7012 {
  field15169: Enum1673!
  field15170: Union215
}

type Type7013 {
  field710: Type7012!
  field415: [Enum553!]!
}

type Type7014 {
  field6223: Type7012
  field394: [Type7013!]
}

type Type7015 {
  field7084: Boolean!
  field6952: Boolean!
  field14445: Boolean!
  field15171: Boolean!
}

type Type7016 {
  field7084: Boolean!
  field15171: Boolean!
  field14445: Boolean!
  field2540: Boolean!
}

type Type7017 {
  field7084: Boolean!
  field15171: Boolean!
  field14445: Boolean!
  field2540: Boolean!
}

type Type7018 {
  field644: Boolean!
  field7084: Boolean!
  field15171: Boolean!
  field2540: Boolean!
}

type Type7019 {
  field7084: Boolean!
  field6952: Boolean!
  field15171: Boolean!
  field14445: Boolean!
  field2540: Boolean!
}

type Type7020 {
  field7084: Boolean!
  field6952: Boolean!
  field15171: Boolean!
  field14445: Boolean!
  field2540: Boolean!
}

type Type7021 {
  field644: Boolean!
  field7084: Boolean!
  field6952: Boolean!
  field15171: Boolean!
  field14445: Boolean!
  field2540: Boolean!
}

union Union216 = Type7015 | Type7016 | Type7017 | Type7018 | Type7019 | Type7020 | Type7021

type Type7022 {
  field15172: Boolean!
  field15170: Union216
}

type Type3204 @key(fields: "field109") {
  field109: ID!
  field15173: Type7014
  field15174: Type7022
}

type Type7023 {
  field3: Type7010!
  field415: [Enum553!]!
  field440: String
  field15175: Boolean!
  field15176: Boolean!
}

type Type3205 @key(fields: "field109") {
  field109: ID!
  field15177(arg257: Int, arg258: Int): [Type7023!]
  field15178(arg257: Int, arg258: Int): [Type7023!]
}

type Type7024 {
  field109: ID!
  field1789: [Type7025!]
}

type Type7025 {
  field3: Type7010!
  field415: [Enum553!]!
  field440: String
}

enum Enum1674 {
  VALUE_5713
  VALUE_5714
  VALUE_5715
  VALUE_5716
  VALUE_5717
  VALUE_5718
}

input Input2974 {
  inputField187: ID!
  inputField5434: Boolean!
  inputField5435: [Enum1674!]
}

type Type3206 @key(fields: "field109") {
  field109: ID!
  field609: Boolean!
  field15179: [Enum1674]
}

type Type29 @key(fields: "field109") @extends {
  field109: Int! @external
  field15180: Type3204
  field15181(arg264: [Enum553!], arg1412: Input2973): Type3205!
  """
  This is an anonymized description
  """
  field15116: Type7024
  field15182: Type3206!
}

interface Interface286 implements Interface26 {
  field2: ID! @external
  """
  This is an anonymized description
  """
  field4178: Boolean
}

interface Interface287 implements Interface26 {
  field2: ID! @external
  """
  This is an anonymized description
  """
  field4178: Boolean
}

extend interface Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
}

type Type139 implements Interface286 & Interface287 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field4178: Boolean
}

type Type137 implements Interface286 & Interface287 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field4178: Boolean
}

type Type138 implements Interface286 & Interface287 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field4178: Boolean
}

type Type136 implements Interface286 & Interface287 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field4178: Boolean
}

type Type140 implements Interface286 & Interface287 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field4178: Boolean
}

type Type149 implements Interface286 & Interface287 & Interface26 @extends @key(fields: "field2") {
  field2: ID! @external
  field4178: Boolean
}