type Mutation @extends {
  field25254(arg20: Input5217!): Type11650!
}

type Type119 {
  field582: String
  field583: Boolean!
  field584: Boolean!
  field585: String
}

type Query @extends {
  field25255(arg49: ID!): Type3191
  field25256(arg20: Input48!): Type11653!
}

type Type11650 {
  field588: Type3191
}

type Type11651 {
  field24245: String
  field812: [String!]
}

type Type11652 {
  field100: Enum2870
}

type Type3191 @key(fields: "field569") {
  field567: Float!
  field200: String
  field736: Type11651
  field737: Type11652
  field568: ID
  field569: ID!
  field570: String!
  field571: String!
  field572: ID
  field573: ID!
  field100: Enum2869!
  field58: String
}

type Type11653 {
  field177: [Type11654!]
  field379: Type119!
}

type Type11654 {
  field382: String
  field178: Type3191!
}

enum Enum31 {
  VALUE_214
  VALUE_215
}

enum Enum2869 {
  VALUE_765
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
  VALUE_1984
  VALUE_1014
}

enum Enum2870 {
  VALUE_765
  VALUE_1014
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input49 {
  inputField16: String!
  "This is an anonymized description"
  inputField115: Enum31!
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input5217 {
  inputField120: String
  inputField110: String
  "This is an anonymized description"
  inputField111: String
  inputField121: String
  inputField135: Input5218!
  "This is an anonymized description"
  inputField122: Input49
  "This is an anonymized description"
  inputField123: Input50
  "This is an anonymized description"
  inputField124: String
  "This is an anonymized description"
  inputField125: String
  "This is an anonymized description"
  inputField126: String
}

input Input5218 {
  inputField8859: String!
  inputField2136: [String!]!
}