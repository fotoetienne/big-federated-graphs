type Type10766 {
  field422: String
  field23588: String
  field58: String
}

type Type10767 {
  field5326: String
}

type Type3103 @key(fields: "field556") {
  field554: Float!
  field198: String
  field723: Type10766
  field724: Type10767
  field555: ID
  field556: ID!
  field557: String!
  field558: String!
  field559: ID
  field560: ID!
  field100: Enum2671!
  field58: String
}

type Type10768 {
  field176: [Type10769!]
  field366: Type119!
}

type Type10769 {
  field369: String
  field177: Type3103!
}

type Mutation @extends {
  field23589(arg20: Input4864!): Type10770!
}

type Type119 {
  field569: String
  field570: Boolean!
  field571: Boolean!
  field572: String
}

type Query @extends {
  field23590(arg49: ID!): Type3103
  field23591(arg20: Input48!): Type10768!
}

type Type10770 {
  field575: Type3103
}

enum Enum2671 {
  VALUE_212
  VALUE_164
  VALUE_171
  VALUE_165
  VALUE_162
}

enum Enum31 {
  VALUE_214
  VALUE_215
}

input Input4863 {
  inputField57: String!
  inputField8461: String!
  inputField17: String!
}

input Input48 {
  inputField113: String!
  inputField114: Boolean! = false
}

input Input49 {
  inputField16: String!
  "This is an anonymized description"
  inputField115: Enum31!
}

input Input50 {
  "This is an anonymized description"
  inputField116: String
  "This is an anonymized description"
  inputField117: Int!
  "This is an anonymized description"
  inputField118: Int!
  "This is an anonymized description"
  inputField119: Int!
}

input Input4864 {
  inputField120: String
  inputField110: String
  "This is an anonymized description"
  inputField111: String
  inputField121: String
  inputField135: Input4863!
  "This is an anonymized description"
  inputField122: Input49
  "This is an anonymized description"
  inputField123: Input50
  "This is an anonymized description"
  inputField124: String
  "This is an anonymized description"
  inputField125: String
  "This is an anonymized description"
  inputField126: String
}