type Query @extends {
  field2144(arg6: Input435!): Type1269!
}

type Type1269 {
  field2145: Type1270
  field2146: Type1272
}

input Input435 {
  inputField811: Boolean
  inputField812: String
  inputField813: String
  inputField814: String
  inputField612: String
  inputField815: String
  inputField613: String
  inputField816: String
  inputField120: String
  inputField817: String
  inputField609: Boolean
  inputField818: String
  inputField819: Boolean
  inputField820: Int
  inputField821: String
  inputField822: String
  inputField823: String
  inputField824: Boolean
  inputField825: String
  inputField826: String
  inputField827: String
  inputField828: String
  inputField829: String
  inputField830: String
  inputField608: Boolean
  inputField605: String
  inputField831: Boolean
  inputField832: String
  inputField615: String
}

type Type1270 {
  field2147: Int
  field2148: Boolean
  field2149: Boolean
  field2150: Boolean
  field2151: Boolean
  field2152: Boolean
  field2153: Boolean
  field2154: Boolean
  field2155: Boolean
  field2156: String
  field2157: Boolean
  field2158: Boolean
  field2159: Boolean
  field2160: Boolean
  field2161: Boolean
  field2162: Boolean
  field2163: Boolean
  field2164: Boolean
  field2165: Boolean
  field2166: Boolean
  field2167: Boolean
  field2168: Int
  field2169: Int
  field2170: Int
  field2171: Boolean
  field2172: Boolean
  field2173: Int
  field2174: Boolean
  field2175: Boolean
  field2176: Boolean
  field2177: Boolean
  field2178: Int
  field2179: Boolean
}

type Type1271 {
  field2180: String
  field2181: Int
  field2182: Int
}

type Type1272 {
  field2183: Boolean
  field2154: Boolean
  field2184: String
  field2185: [String!]!
  field2186: [Type1271!]!
}