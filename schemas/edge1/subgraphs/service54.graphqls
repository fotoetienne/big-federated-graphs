type Query @extends {
  field2281(arg6: Input435!): Type1269!
}

type Type1269 {
  field2282: Type1270
  field2283: Type1272
}

input Input435 {
  inputField811: Boolean
  inputField812: String
  inputField813: String
  inputField814: String
  inputField612: String
  inputField815: String
  inputField613: String
  inputField816: String
  inputField120: String
  inputField817: String
  inputField609: Boolean
  inputField818: String
  inputField819: Boolean
  inputField820: Int
  inputField821: String
  inputField822: String
  inputField823: String
  inputField824: Boolean
  inputField825: String
  inputField826: String
  inputField827: String
  inputField828: String
  inputField829: String
  inputField830: String
  inputField608: Boolean
  inputField605: String
  inputField831: Boolean
  inputField832: String
  inputField615: String
}

type Type1270 {
  field2284: Int
  field2285: Boolean
  field2286: Boolean
  field2287: Boolean
  field2288: Boolean
  field2289: Boolean
  field2290: Boolean
  field2291: Boolean
  field2292: Boolean
  field2293: String
  field2294: Boolean
  field2295: Boolean
  field2296: Boolean
  field2297: Boolean
  field2298: Boolean
  field2299: Boolean
  field2300: Boolean
  field2301: Boolean
  field2302: Boolean
  field2303: Boolean
  field2304: Boolean
  field2305: Int
  field2306: Int
  field2307: Int
  field2308: Boolean
  field2309: Boolean
  field2310: Int
  field2311: Boolean
  field2312: Boolean
  field2313: Boolean
  field2314: Boolean
  field2315: Int
  field2316: Boolean
}

type Type1271 {
  field2317: String
  field2318: Int
  field2319: Int
}

type Type1272 {
  field2320: Boolean
  field2291: Boolean
  field2321: String
  field2322: [String!]!
  field2323: [Type1271!]!
}