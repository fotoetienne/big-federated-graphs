type Mutation @extends {
  field893(arg71: Input68): Type390! @directive3(arg31: "anonymous-string") @deprecated(reason: "Anonymized deprecation reason")
  field894(arg71: Input69): Type393! @directive3(arg31: "anonymous-string") @deprecated(reason: "Anonymized deprecation reason")
  field895(arg71: Input70): Type391! @directive3(arg31: "anonymous-string")
  field896(arg72: Input75!): Type396!
  field897(arg73: Input76): Type397!
}

input Input68 {
  inputField104: Input74
  inputField105: Boolean
}

input Input69 {
  inputField104: Input74
  inputField105: Boolean
  inputField106: [Input71!]!
}

input Input70 {
  inputField107: String!
  inputField108: [Input72!]
  inputField105: Boolean
  inputField106: [Input71!]!
}

input Input71 {
  inputField109: String!
}

input Input72 {
  inputField110: String!
  inputField29: String
}

input Input73 {
  inputField111: Boolean
}

input Input74 {
  inputField75: String!
  inputField112: String!
  inputField113: String
  inputField114: [Input72!]
  inputField115: Input73
}

type Type390 {
  field898: String!
}

type Type391 {
  field899: String!
  field900: [Type392!]
}

type Type392 {
  field901: Type395!
  field898: String
  field902: Enum63
}

type Type393 {
  field899: String!
  field900: [Type394!]
}

type Type394 {
  field901: Type395!
  field898: String
  field902: Enum63
}

type Type395 {
  field903: String!
}

enum Enum63 {
  VALUE_40
  VALUE_516
  VALUE_517
  VALUE_518
  VALUE_519
  VALUE_520
  VALUE_521
  VALUE_522
  VALUE_523
}

input Input75 {
  inputField116: Input77!
}

type Type396 {
  field904: [Type398]
}

input Input76 {
  inputField117: String!
  inputField118: Enum65!
}

type Type397 {
  field904: [Type398]
}

enum Enum64 {
  VALUE_524
  VALUE_525
  VALUE_526
  VALUE_527
  VALUE_528
  VALUE_529
  VALUE_530
  VALUE_531
  VALUE_532
}

enum Enum65 {
  VALUE_503
  VALUE_533
  VALUE_534
  VALUE_535
  VALUE_536
  VALUE_537
  VALUE_538
}

type Type398 {
  field814: Boolean
}

input Input77 {
  inputField119: String!
  inputField118: Enum65!
  inputField120: String
  inputField121: String
  inputField122: String
  inputField123: String
  inputField124: Boolean
  inputField125: Boolean
  inputField126: Boolean
  inputField127: Boolean
  """
  This is an anonymized description
  """
  inputField128: Boolean
}

type Query @extends {
  """
  This is an anonymized description
  """
  field905: Type399 @experimental
}

"""
This is an anonymized description
"""
type Type399 {
  field906: Union23
}

"""
This is an anonymized description
"""
type Type400 {
  field907: Type401!
  field908: Type402!
}

"""
This is an anonymized description
"""
type Type401 {
  field909: String!
  field910: String!
  field911: String!
}

"""
This is an anonymized description
"""
type Type402 {
  field912: String!
  field913: String!
}

type Type403 {
  """
  This is an anonymized description
  """
  field216: String!
}

"""
This is an anonymized description
"""
union Union23 = Type400 | Type403